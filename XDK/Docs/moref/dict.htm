<HTML><HEAD><TITLE>IMoaDict</TITLE></HEAD><body bgcolor="#FFFFFF"  link="#ff3300" alink="#ff3300" vlink="#333399"><A HREF="../moadg/index.htm">MOA Developer's Guide</A><BR><A HREF="index.htm">MOA Interfaces</A> | <A HREF="momthndx.htm">MOA Methods</A> | <A HREF="motypndx.htm">MOA Types and Misc API</A><hr width=45% align=left><h2><font face=arial,helvetica,sans-serif>IMoaDict</font></h2><hr width=45% align=left><P>Interface ID: <CODE>IID_IMoaDict<BR></CODE>Pointer type: <CODE>PIMoaDict<BR></CODE>Inheritance: <A HREF = "unknown.htm"><FONT SIZE=2>IMoaUnknown</FONT></A><BR>Header file: <A HREF = "../../include/moastdif.h">moastdif.h</A><BR><h3><font face=arial,helvetica,sans-serif>Description</font></h3><DL><DT><DD><BR>This standard MOA callback interface is provided by the applicationfor use in registering an Xtra. The description of the <TT><FONT SIZE=2 FACE="Courier">IMoaCache</FONT></TT>interface (earlier in this section) provides a detailed discussionof the Xtra registry.<BR><BR>The Xtra cache is organized into hierarchies of dictionaries,all represented by instances of the <TT><FONT SIZE=2 FACE="Courier">IMoaDict</FONT></TT>interface. Within the cache, each file is represented by a <TT><FONT SIZE=2 FACE="Courier">PIMoaFileEntryDict</FONT></TT>,each Xtra in a file is represented by a <TT><FONT SIZE=2 FACE="Courier">PIMoaXtraEntryDict</FONT></TT>,and each class/interface combination in an Xtra is representedby a <TT><FONT SIZE=2 FACE="Courier">PIMoaRegistryEntryDict</FONT></TT>.All these types are synonyms for <TT><FONT SIZE=2 FACE="Courier">PIMoaDict</FONT></TT>.<BR><BR>Each entry in a dictionary consists of three parts: a key, a type,and a value. The key is used to locate a specific entry. Keysfor certain entries may be specified by an application. If anXtra adds its own data to the cache, it can specify the keys toassociate with particular values. A number of value types canbe stored in a dictionary. The <TT><FONT SIZE=2 FACE="Courier">IMoaDict</FONT></TT>interface defines a set of constants to specify these types; theseare documented in <A href="motypndx.htm#MODICTCONST">IMoaDict constants</A>.<BR><BR>Xtras register themselves and add other entries to their registrydictionary by implementing the <TT><FONT SIZE=2 FACE="Courier">IMoaRegister</FONT></TT>interface. They can initialize themselves from information inthe registry dictionary by implementing the <TT><FONT SIZE=2 FACE="Courier">IMoaInitFromDict</FONT></TT>interface. The <TT><FONT SIZE=2 FACE="Courier">IMoaDict</FONT></TT>interface is used to get and set individual entries in a dictionary.<BR><BR></DL><P><h3><font face=arial,helvetica,sans-serif>See also</font></h3><DL><DT><DD><A href="motypndx.htm#MODICTCONST">IMoaDict constants</A>, <A href="motypndx.htm#MODICTERRS">IMoaDict errors</A></DL><h3><font face=arial,helvetica,sans-serif>Methods</font></h3><DL><DT><DD></DL><h4><font face=arial,helvetica,sans-serif>Creating and initializing </font></h4><DL><DT><DD><A HREF = "#SetSize">SetSize()</A> <BR><A HREF = "#MakeDict">MakeDict()</A> </DL><h4><font face=arial,helvetica,sans-serif>Accessing entries </font></h4><DL><DT><DD><A HREF = "#Get">Get()</A> <BR><A HREF = "#Count">Count()</A> <BR><A HREF = "#GetNth">GetNth()</A> <BR><A HREF = "#GetInfo">GetInfo()</A> <BR><A HREF = "#FindKey">FindKey()</A> </DL><h4><font face=arial,helvetica,sans-serif>Modifying entries </font></h4><DL><DT><DD><A HREF = "#Put">Put()</A> <BR><A HREF = "#Remove">Remove()</A> </DL><hr width=45% align=left><h3><font face=arial,helvetica,sans-serif><A NAME="Count">Count()</A></font></h3><h4><font face=arial,helvetica,sans-serif>Syntax</font></h4><DL><DT><DD><DT>Count(PIMoaDict<I>This</I>, <DD><BR>MoaUlong FAR *<I>pCount</I>)<DT><DD></DL><h4><font face=arial,helvetica,sans-serif>Parameters</font></h4><DL><DT><DD><DT><CODE><I><FONT SIZE=2 FACE="Courier">This</FONT></I></CODE><DD>Pointer to the <CODE>IMoaDict</CODE> interface<BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">pCount</FONT></I></CODE><DD><CODE>MoaUlong FAR *</CODE>Integer pointer for return value<BR><BR></DL><h4><font face=arial,helvetica,sans-serif>Returns</font></h4><DL><DT><DD>Internal lookup key </DL><h4><font face=arial,helvetica,sans-serif>Description</font></h4><DL><DT><DD>Returns how many (key, type, value) tuples are in a dictionary.<BR></DL><P><hr width=45% align=left><h3><font face=arial,helvetica,sans-serif><A NAME="FindKey">FindKey()</A></font></h3><h4><font face=arial,helvetica,sans-serif>Syntax</font></h4><DL><DT><DD><DT>FindKey(PIMoaDict<I>This</I>, <DD><BR>ConstPMoaChar<I>key</I>)<DT><DD></DL><h4><font face=arial,helvetica,sans-serif>Parameters</font></h4><DL><DT><DD><DT><CODE><I><FONT SIZE=2 FACE="Courier">This</FONT></I></CODE><DD>Pointer to the <CODE>IMoaDict</CODE> interface<BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">key</FONT></I></CODE><DD><CODE>ConstPMoaChar</CODE>Key for the entry <BR><BR></DL><h4><font face=arial,helvetica,sans-serif>Returns</font></h4><DL><DT><DD>Internal lookup key </DL><h4><font face=arial,helvetica,sans-serif>Description</font></h4><DL><DT><DD>The method <TT><FONT SIZE=2 FACE="Courier">FindKey()</FONT></TT>returns the &quot;magic&quot; key used internally by the cachefor fast access to a dictionary entry. Calling this method andstoring the return value can provide much faster dictionary accessto frequently accessed values. NULL will be returned when outof memory. <BR></DL><P><hr width=45% align=left><h3><font face=arial,helvetica,sans-serif><A NAME="Get">Get()</A></font></h3><h4><font face=arial,helvetica,sans-serif>Syntax</font></h4><DL><DT><DD><DT>Get(PIMoaDict<I>This</I>, <DD><BR>MoaDictTypeID<I>type</I>, <BR>PMoaVoid<I>pValueBuffer</I>, <BR>MoaLong<I>bufferSize</I>, <BR>ConstPMoaChar<I>key</I>)<DT><DD></DL><h4><font face=arial,helvetica,sans-serif>Parameters</font></h4><DL><DT><DD><DT><CODE><I><FONT SIZE=2 FACE="Courier">This</FONT></I></CODE><DD>Pointer to the <CODE>IMoaDict</CODE> interface<BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">type</FONT></I></CODE><DD><CODE>MoaDictTypeID</CODE><TT><FONT SIZE=2 FACE="Courier">MoaDictTypeID</FONT></TT>of the value <BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">pValueBuffer</FONT></I></CODE><DD><CODE>PMoaVoid</CODE>Pointer to buffer for the returned value<BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">bufferSize</FONT></I></CODE><DD><CODE>MoaLong</CODE>Size of buffer for returned value <BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">key</FONT></I></CODE><DD><CODE>ConstPMoaChar</CODE>Key for the entry <BR><BR></DL><h4><font face=arial,helvetica,sans-serif>Returns</font></h4><DL><DT><DD><CODE>MoaError</CODE></DL><h4><font face=arial,helvetica,sans-serif>Description</font></h4><DL><DT><DD>Returns a value from a dictionary given its key. <BR></DL><P><hr width=45% align=left><h3><font face=arial,helvetica,sans-serif><A NAME="GetInfo">GetInfo()</A></font></h3><h4><font face=arial,helvetica,sans-serif>Syntax</font></h4><DL><DT><DD><DT>GetInfo(PIMoaDict<I>This</I>, <DD><BR>MoaDictTypeID FAR *<I>pType</I>, <BR>MoaLong FAR *<I>pValueSize</I>, <BR>ConstPMoaChar<I>key</I>)<DT><DD></DL><h4><font face=arial,helvetica,sans-serif>Parameters</font></h4><DL><DT><DD><DT><CODE><I><FONT SIZE=2 FACE="Courier">This</FONT></I></CODE><DD>Pointer to the <CODE>IMoaDict</CODE> interface<BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">pType</FONT></I></CODE><DD><CODE>MoaDictTypeID FAR *</CODE>Returns the type of the value<BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">pValueSize</FONT></I></CODE><DD><CODE>MoaLong FAR *</CODE>Returns the size of the value <BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">key</FONT></I></CODE><DD><CODE>ConstPMoaChar</CODE>Key for entry <BR><BR></DL><h4><font face=arial,helvetica,sans-serif>Returns</font></h4><DL><DT><DD><CODE>MoaError</CODE></DL><h4><font face=arial,helvetica,sans-serif>Description</font></h4><DL><DT><DD>Returns information on the entry for the specified key ina dictionary. Pass NULL for pType or pValueSize if you're notinterested in the specific information. <BR></DL><P><hr width=45% align=left><h3><font face=arial,helvetica,sans-serif><A NAME="GetNth">GetNth()</A></font></h3><h4><font face=arial,helvetica,sans-serif>Syntax</font></h4><DL><DT><DD><DT>GetNth(PIMoaDict<I>This</I>, <DD><BR>MoaUlong<I>index</I>, <BR>MoaDictTypeID FAR *<I>pType</I>, <BR>MoaLong FAR *<I>pValueSize</I>, <BR>ConstPMoaChar FAR *<I>pKey</I>)<DT><DD></DL><h4><font face=arial,helvetica,sans-serif>Parameters</font></h4><DL><DT><DD><DT><CODE><I><FONT SIZE=2 FACE="Courier">This</FONT></I></CODE><DD>Pointer to the <CODE>IMoaDict</CODE> interface<BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">index</FONT></I></CODE><DD><CODE>MoaUlong</CODE>Entry number to access <BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">pType</FONT></I></CODE><DD><CODE>MoaDictTypeID FAR *</CODE>Returns the type of the value<BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">pValueSize</FONT></I></CODE><DD><CODE>MoaLong FAR *</CODE>Returns the size of the value <BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">pKey</FONT></I></CODE><DD><CODE>ConstPMoaChar FAR *</CODE>Returns the key of the value<BR><BR></DL><h4><font face=arial,helvetica,sans-serif>Returns</font></h4><DL><DT><DD><CODE>MoaError</CODE></DL><h4><font face=arial,helvetica,sans-serif>Description</font></h4><DL><DT><DD>Returns information about entry number index in a dictionary.Pass NULL for pType, pValueSize, or pKey if you're not interestedin the specific information. <BR></DL><P><hr width=45% align=left><h3><font face=arial,helvetica,sans-serif><A NAME="MakeDict">MakeDict()</A></font></h3><h4><font face=arial,helvetica,sans-serif>Syntax</font></h4><DL><DT><DD><DT>MakeDict(PIMoaDict<I>This</I>, <DD><BR>struct IMoaDict FAR * FAR *<I>pNewDict</I>, <BR>ConstPMoaChar<I>key</I>)<DT><DD></DL><h4><font face=arial,helvetica,sans-serif>Parameters</font></h4><DL><DT><DD><DT><CODE><I><FONT SIZE=2 FACE="Courier">This</FONT></I></CODE><DD>Pointer to the <CODE>IMoaDict</CODE> interface<BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">pNewDict</FONT></I></CODE><DD><CODE>struct IMoaDict FAR * FAR *</CODE>Allocated pointerto <TT><FONT SIZE=2 FACE="Courier">IMoaDict</FONT></TT> <BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">key</FONT></I></CODE><DD><CODE>ConstPMoaChar</CODE>Key for the entry <BR><BR></DL><h4><font face=arial,helvetica,sans-serif>Returns</font></h4><DL><DT><DD><CODE>MoaError</CODE></DL><h4><font face=arial,helvetica,sans-serif>Description</font></h4><DL><DT><DD>Call this method to create a new instance of <TT><FONT SIZE=2 FACE="Courier">IMoaDict</FONT></TT>and place it in the dictionary represented by This under the specifiedkey. Pass an allocated <TT><FONT SIZE=2 FACE="Courier">PIMoaDict</FONT></TT>as pNewDict to get a pointer to the new instance; otherwise, passNULL. The newly created dictionary is &quot;owned&quot; by This;the caller need not call <TT><FONT SIZE=2 FACE="Courier">Release()</FONT></TT>on it. <BR></DL><P><hr width=45% align=left><h3><font face=arial,helvetica,sans-serif><A NAME="Put">Put()</A></font></h3><h4><font face=arial,helvetica,sans-serif>Syntax</font></h4><DL><DT><DD><DT>Put(PIMoaDict<I>This</I>, <DD><BR>MoaDictTypeID<I>type</I>, <BR>ConstPMoaVoid<I>pValueBuffer</I>, <BR>MoaLong<I>bufferSize</I>, <BR>ConstPMoaChar<I>key</I>)<DT><DD></DL><h4><font face=arial,helvetica,sans-serif>Parameters</font></h4><DL><DT><DD><DT><CODE><I><FONT SIZE=2 FACE="Courier">This</FONT></I></CODE><DD>Pointer to the <CODE>IMoaDict</CODE> interface<BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">type</FONT></I></CODE><DD><CODE>MoaDictTypeID</CODE><TT><FONT SIZE=2 FACE="Courier">MoaDictTypeID</FONT></TT>of the value <BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">pValueBuffer</FONT></I></CODE><DD><CODE>ConstPMoaVoid</CODE>Pointer to buffer for the value<BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">bufferSize</FONT></I></CODE><DD><CODE>MoaLong</CODE>Size of buffer for value <BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">key</FONT></I></CODE><DD><CODE>ConstPMoaChar</CODE>Key for the entry <BR><BR></DL><h4><font face=arial,helvetica,sans-serif>Returns</font></h4><DL><DT><DD><CODE>MoaError</CODE></DL><h4><font face=arial,helvetica,sans-serif>Description</font></h4><DL><DT><DD>Inserts the value pValueBuffer of the specified type, bufferSize,and key into the dictionary This. <BR></DL><P><hr width=45% align=left><h3><font face=arial,helvetica,sans-serif><A NAME="Remove">Remove()</A></font></h3><h4><font face=arial,helvetica,sans-serif>Syntax</font></h4><DL><DT><DD><DT>Remove(PIMoaDict<I>This</I>, <DD><BR>ConstPMoaChar<I>key</I>)<DT><DD></DL><h4><font face=arial,helvetica,sans-serif>Parameters</font></h4><DL><DT><DD><DT><CODE><I><FONT SIZE=2 FACE="Courier">This</FONT></I></CODE><DD>Pointer to the <CODE>IMoaDict</CODE> interface<BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">key</FONT></I></CODE><DD><CODE>ConstPMoaChar</CODE>Key for the entry <BR><BR></DL><h4><font face=arial,helvetica,sans-serif>Returns</font></h4><DL><DT><DD><CODE>MoaError</CODE></DL><h4><font face=arial,helvetica,sans-serif>Description</font></h4><DL><DT><DD>Looks up the value associated with key and removes it froma dictionary. For reference counted types (interfaces), the countwill simply be decremented. <BR></DL><P><hr width=45% align=left><h3><font face=arial,helvetica,sans-serif><A NAME="SetSize">SetSize()</A></font></h3><h4><font face=arial,helvetica,sans-serif>Syntax</font></h4><DL><DT><DD><DT>SetSize(PIMoaDict<I>This</I>, <DD><BR>MoaUlong<I>numEntries</I>)<DT><DD></DL><h4><font face=arial,helvetica,sans-serif>Parameters</font></h4><DL><DT><DD><DT><CODE><I><FONT SIZE=2 FACE="Courier">This</FONT></I></CODE><DD>Pointer to the <CODE>IMoaDict</CODE> interface<BR><BR><DT><CODE><I><FONT SIZE=2 FACE="Courier">numEntries</FONT></I></CODE><DD><CODE>MoaUlong</CODE>Integer representing number of entries<BR><BR></DL><h4><font face=arial,helvetica,sans-serif>Returns</font></h4><DL><DT><DD><CODE>MoaError</CODE></DL><h4><font face=arial,helvetica,sans-serif>Description</font></h4><DL><DT><DD>Call this method to pre-allocate space in a dictionary. Thismakes adding to the dictionary more efficient if the size is more-or-lessknown before hand. <BR></DL><P><hr width=45% align=left><P><A HREF="../copyrite.htm" >Copyright &#169; 1995, 1996, 1997, 1998, 1999 Macromedia, Inc.</A></BODY><!--#include virtual="/uber/html/footer.html" --></html>