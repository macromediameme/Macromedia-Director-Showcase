<HTML><HEAD><TITLE>Director Types and Miscellaneous API</TITLE></HEAD><BODY bgcolor="#FFFFFF"  link="#ff3300" alink="#ff3300" vlink="#333399"><P><A HREF="../drdg/index.htm">DR Developer's Guide</A> | <A HREF="../mmdg/index.htm">MM Developer's Guide</A><BR><A HREF="index.htm">DR Interfaces</A> | <A HREF="drmthndx.htm">DR Methods</A><HR width=45% align=left><H3><A NAME="RTFToC2"><FONT SIZE=4 face=arial,helvetica,sans-serif>Director 7 Xtra Development Kit: Director API Reference</FONT></A></H3><H2><FONT SIZE=5 face=arial,helvetica,sans-serif>Director Types and Miscellaneous API</FONT></H2><HR width=45% align=left><P>This document contains the following sections:<UL><LI><A HREF = "#DRPROPS">Director Properties</A><LI><A HREF = "#DRTYPES">Director Types</A><LI><A HREF = "#DRMACS">Director Macros</A><LI><A HREF = "#DRCONS">Director Constants</A><LI><A HREF = "#DRNIDS">Director Notification IDs</A><LI><A HREF = "#DRERRS">Director Error Codes</A></UL><HR width=45% align=left><H3><FONT SIZE=4 face=arial,helvetica,sans-serif><A NAME="DRPROPS">Director Properties</A></FONT></H3><H4><A NAME="CASTPROPS"><FONT face=arial,helvetica,sans-serif>Cast properties</FONT></A><FONT face=arial,helvetica,sans-serif></FONT></H4><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=90><B>Symbol</B></TD><TD WIDTH=57><B>Type</B></TD><TD WIDTH=52><B>Get/Set</B></TD><TD WIDTH=155><B>Description</B></TD><TD WIDTH=151><B>Notes</B></TD></TR><TR><TD WIDTH=90><TT>name</TT></TD><TD WIDTH=57>string</TD><TD WIDTH=52>G/S</TD><TD WIDTH=155>Author-defined name of cast (!= filename)</TD><TD WIDTH=151>User sets in Cast Properties dialog</TD></TR><TR><TD WIDTH=90><TT>pathName</TT></TD><TD WIDTH=57>string</TD><TD WIDTH=52>G/S</TD><TD WIDTH=155>Full pathname of cast. Set allowed only for linked casts</TD><TD WIDTH=151>Setting this swaps in new linked cast on-the-fly</TD></TR><TR><TD WIDTH=90><TT>preloadMode</TT></TD><TD WIDTH=57>integer</TD><TD WIDTH=52>G/S</TD><TD WIDTH=155>Cast preload mode: <BR>0 = none, <BR>1 = before 1st frame, <BR>2 = after first frame</TD><TD WIDTH=151></TD></TR><TR><TD WIDTH=90><TT>memberCount</TT></TD><TD WIDTH=57>integer</TD><TD WIDTH=52>G</TD><TD WIDTH=155>The number of occupied cast member slots in the cast</TD><TD WIDTH=151>Does not incude <TT>&quot;empty&quot;</TT> cast member slots&quot;</TD></TR><TR><TD WIDTH=90><TT>minMember</TT></TD><TD WIDTH=57>integer</TD><TD WIDTH=52>G</TD><TD WIDTH=155>The index of the first occupied cast member slot</TD><TD WIDTH=151></TD></TR><TR><TD WIDTH=90><TT>maxMember</TT></TD><TD WIDTH=57>integer</TD><TD WIDTH=52>G</TD><TD WIDTH=155>The index of the last occupied cast member slot</TD><TD WIDTH=151></TD></TR><TR><TD WIDTH=90><I>Authoring-only</I></TD><TD WIDTH=57></TD><TD WIDTH=52></TD><TD WIDTH=155></TD><TD WIDTH=151></TD></TR><TR><TD WIDTH=90><TT>selection</TT></TD><TD WIDTH=57>linear list</TD><TD WIDTH=52>G/S</TD><TD WIDTH=155>List indicating current cast selection</TD><TD WIDTH=151>List of lists. Each sublist specifies a continuous range of selected cast members, for example [[1, 5], [8, 12], [15,15]]</TD></TR></TABLE><P><A NAME="DDE_LINK2">The selection property provides a list of</A>lists describing selected thumbnails in the cast. Each cast maintainsits own selection. Each sublist contains two elements, integersfor the <TT>&quot;startRun&quot;</TT>and <TT>&quot;endRun&quot;</TT>of a contiguous range of selected cast members. To find the activecast at author time, use the <TT>&quot;activeCast&quot;</TT>movie property.<HR width=45% align=left><H4><A NAME="CASTMEMPROPS"><FONT face=arial,helvetica,sans-serif>Cast memberproperties</FONT></A><FONT face=arial,helvetica,sans-serif> </FONT></H4><H5><A NAME="RTFToC4"><FONT SIZE=2 face=arial,helvetica,sans-serif>General castmember properties</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif> </FONT></H5><P>These common properties apply to Director cast members, includingboth internal and Xtra cast member types.<P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=124><B>Symbol</B></TD><TD WIDTH=67><B>Type</B></TD><TD WIDTH=62><B>Get/Set</B></TD><TD WIDTH=126><B>Description</B></TD><TD WIDTH=126><B>Notes</B></TD></TR><TR><TD WIDTH=124><TT>name</TT></TD><TD WIDTH=67>string</TD><TD WIDTH=62>G/S</TD><TD WIDTH=126>User-defined name of the cast member</TD><TD WIDTH=126></TD></TR><TR><TD WIDTH=124><TT>size</TT></TD><TD WIDTH=67>integer</TD><TD WIDTH=62>G</TD><TD WIDTH=126>Memory currently occupied by cast member (in bytes)</TD><TD WIDTH=126></TD></TR><TR><TD WIDTH=124><TT>castType</TT></TD><TD WIDTH=67>symbol</TD><TD WIDTH=62>G</TD><TD WIDTH=126>Type of cast member returned as symbol. </TD><TD WIDTH=126>Using <TT>&quot;castType&quot;</TT>, text fields are returned as type <TT>#text </TT>(for Director 4.0 compat.)</TD></TR><TR><TD WIDTH=124><TT>type</TT></TD><TD WIDTH=67>symbol</TD><TD WIDTH=62>G</TD><TD WIDTH=126>Type of cast member returned as symbol.</TD><TD WIDTH=126>Using <TT>&quot;type&quot;</TT>, text fields are returned as <TT>#field </TT>(Director 5.0 naming)</TD></TR><TR><TD WIDTH=124><TT>scriptText</TT></TD><TD WIDTH=67>string</TD><TD WIDTH=62>G/S</TD><TD WIDTH=126>The text of the cast member script</TD><TD WIDTH=126></TD></TR><TR><TD WIDTH=124><TT>modified</TT></TD><TD WIDTH=67>integer</TD><TD WIDTH=62>G/S</TD><TD WIDTH=126>0 = not modified since last save, <BR>1 = props or media modified</TD><TD WIDTH=126></TD></TR><TR><TD WIDTH=124><TT>loaded</TT></TD><TD WIDTH=67>integer</TD><TD WIDTH=62>G/S</TD><TD WIDTH=126>0 = unloaded, <BR>1= load. Setting to 0 unloads cast member, setting to 1 loads it</TD><TD WIDTH=126></TD></TR><TR><TD WIDTH=124><TT>fileName</TT></TD><TD WIDTH=67>string</TD><TD WIDTH=62>G/S</TD><TD WIDTH=126>Full pathname of linked cast member, only valid for linked <TT>castMems</TT>, setting changes link on-the-fly</TD><TD WIDTH=126></TD></TR><TR><TD WIDTH=124><TT>purgePriority</TT></TD><TD WIDTH=67>integer</TD><TD WIDTH=62>G/S</TD><TD WIDTH=126>0=never, <BR>1=last, <BR>2=next, <BR>3=normal&quot;</TD><TD WIDTH=126></TD></TR><TR><TD WIDTH=124><TT>number</TT></TD><TD WIDTH=67>integer</TD><TD WIDTH=62>G</TD><TD WIDTH=126>Integer repetition of <TT>castMemRef </TT>(high 16-bits = <TT>castLibIndex </TT>- 1)</TD><TD WIDTH=126></TD></TR><TR><TD WIDTH=124><TT>member</TT></TD><TD WIDTH=67>castMem</TD><TD WIDTH=62>G</TD><TD WIDTH=126><TT>CastMemRef </TT>of cast member</TD><TD WIDTH=126></TD></TR><TR><TD WIDTH=124><TT>width</TT></TD><TD WIDTH=67>integer</TD><TD WIDTH=62>G</TD><TD WIDTH=126>Width of cast member's default rectangle</TD><TD WIDTH=126></TD></TR><TR><TD WIDTH=124><TT>height</TT></TD><TD WIDTH=67>integer</TD><TD WIDTH=62>G</TD><TD WIDTH=126>Height of cast member's default rectangle</TD><TD WIDTH=126></TD></TR><TR><TD WIDTH=124><TT>rect</TT></TD><TD WIDTH=67>rect</TD><TD WIDTH=62>G/S</TD><TD WIDTH=126>Cast member's default rectangle; set only allowed for text field</TD><TD WIDTH=126></TD></TR><TR><TD WIDTH=124><TT>hilite</TT></TD><TD WIDTH=67>integer</TD><TD WIDTH=62>G/S</TD><TD WIDTH=126>0=not hilighted, 1=highlighted</TD><TD WIDTH=126></TD></TR><TR><TD WIDTH=124><TT>regPoint</TT></TD><TD WIDTH=67>point</TD><TD WIDTH=62>G/S</TD><TD WIDTH=126>Registration point for cast member. Currently can only set for bitmaps, returns (0,0) for all others</TD><TD WIDTH=126></TD></TR></TABLE><H5><A NAME="RTFToC5"><FONT SIZE=2 face=arial,helvetica,sans-serif>Cast type</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif></FONT></H5><P>The <TT>&quot;castType&quot;</TT>property of a cast member represents the type of the cast member.The valid BUILT-IN cast member type symbols are:<P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=138><B>Name</B></TD><TD WIDTH=366><B>Description</B></TD></TR><TR><TD WIDTH=138>#bitmap </TD><TD WIDTH=366>Static bitmap image of any pixel depth</TD></TR><TR><TD WIDTH=138>#filmloop</TD><TD WIDTH=366>Looped section of Director score (mini, embedded, non-interactive movie)</TD></TR><TR><TD WIDTH=138>#text</TD><TD WIDTH=366>Block of styled text</TD></TR><TR><TD WIDTH=138>#palette</TD><TD WIDTH=366>Color Look-Up Table (CLUT), associated with bitmap cast members</TD></TR><TR><TD WIDTH=138>#picture</TD><TD WIDTH=366>Macintosh PICT (metafile-like) object</TD></TR><TR><TD WIDTH=138>#sound </TD><TD WIDTH=366>Sound chunk (can be various sample rates/sizes, compressed, looped, and so on)</TD></TR><TR><TD WIDTH=138>#button</TD><TD WIDTH=366>Simple button, created with the Director Tools palette</TD></TR><TR><TD WIDTH=138>#shape</TD><TD WIDTH=366>Simple shape (square, oval, or line; filled or unfilled) created with Tools</TD></TR><TR><TD WIDTH=138>#movie </TD><TD WIDTH=366>Linked (external) fully-interactive Director movie</TD></TR><TR><TD WIDTH=138>#digitalVideo</TD><TD WIDTH=366>QuickTime or AVI movie</TD></TR><TR><TD WIDTH=138>#script </TD><TD WIDTH=366>Lingo script (in styled text form)</TD></TR><TR><TD WIDTH=138>#richText </TD><TD WIDTH=366>Block of Rich Text (new to Director 5.0; includes special formatting information)</TD></TR><TR><TD WIDTH=138>#OLE </TD><TD WIDTH=366>Microsoft OLE object (new to Director 5.0)</TD></TR><TR><TD WIDTH=138>#transition </TD><TD WIDTH=366>Transition and associated properties (new to Director 5.0)</TD></TR></TABLE><P>In addition, other cast member types can be registered by Spriteand Transition Xtras. These types can be obtained using the <TT>IMoaDrPlayer</TT>methods such as <TT>GetCastMemTypeCount()</TT>and so on.<H5><A NAME="RTFToC6"><FONT SIZE=2 face=arial,helvetica,sans-serif>Bitmap castmember properties</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif> </FONT></H5><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=99><B>Symbol</B></TD><TD WIDTH=117><B>Type</B></TD><TD WIDTH=66><B>Get/Set</B></TD><TD WIDTH=164><B>Description</B></TD><TD WIDTH=58><B>Notes</B></TD></TR><TR><TD WIDTH=99><TT>depth</TT></TD><TD WIDTH=117>integer</TD><TD WIDTH=66>G</TD><TD WIDTH=164>Pixel depth of bitmap (1,2,4,8,16,32)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=99><TT>palette</TT></TD><TD WIDTH=117>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=164>Palette of cast member as integer. Negative numbers indicate built-in palettes, positive numbers indicate cast-based palette</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=99><TT>paletteRef</TT></TD><TD WIDTH=117>castMem/symbol</TD><TD WIDTH=66>G/S</TD><TD WIDTH=164>Palette of cast member as castMemRef (cast-based palette) or symbol (built-in palette)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=99><TT>maskMember</TT></TD><TD WIDTH=117>castMem</TD><TD WIDTH=66>G</TD><TD WIDTH=164><TT>CastMemRef </TT>of cast member to be used as mask if mask ink applied</TD><TD WIDTH=58></TD></TR></TABLE><H5><A NAME="RTFToC7"><FONT SIZE=2 face=arial,helvetica,sans-serif>Button castmember properties</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif> </FONT></H5><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=98><B>Symbol</B></TD><TD WIDTH=55><B>Type</B></TD><TD WIDTH=66><B>Get/Set</B></TD><TD WIDTH=227><B>Description</B></TD><TD WIDTH=58><B>Notes</B></TD></TR><TR><TD WIDTH=98><TT>text</TT></TD><TD WIDTH=55>string</TD><TD WIDTH=66>G/S</TD><TD WIDTH=227>The characters in the text field (null-terminated)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=98><TT>textStyle</TT></TD><TD WIDTH=55>string </TD><TD WIDTH=66>G/S</TD><TD WIDTH=227>The styles used in the text field; comma-delimited, combination of: <TT>&quot;bold&quot;</TT>, <TT>&quot;italic&quot; </TT>, <TT>&quot;underline&quot;</TT>, <TT>&quot;outline&quot;</TT>, <TT>&quot;shadow&quot;<FON T SIZE=2>, &quot;condense&quot;</TT>, and <TT>&quot;extend&quot;</TT></TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=98><TT>textFont</TT></TD><TD WIDTH=55>string</TD><TD WIDTH=66>G/S</TD><TD WIDTH=227>The font of the entire text field</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=98><TT>textHeight</TT></TD><TD WIDTH=55>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=227>The line height of every line in the text field</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=98><TT>textSize</TT></TD><TD WIDTH=55>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=227>The font size of every character in the text field</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=98><TT>foreColor</TT></TD><TD WIDTH=55>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=227>The foreground color index of every character in the text field</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=98><TT>backColor</TT></TD><TD WIDTH=55>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=227>The background color of the text field</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=98><TT>textAlign</TT></TD><TD WIDTH=55>string</TD><TD WIDTH=66>G/S</TD><TD WIDTH=227>The alignment mode as a string: <TT>&quot;left&quot;</TT>, <TT>&quot;center&quot;</TT>, <TT>&quot;right&quot;</TT></TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=98><TT>buttonType</TT></TD><TD WIDTH=55>symbol</TD><TD WIDTH=66>G/S</TD><TD WIDTH=227>Style of the button as symbol: <TT>#pushButton</TT>, <TT>#checkBox</TT>, <TT>#radioButton</TT></TD><TD WIDTH=58></TD></TR></TABLE><H5><A NAME="RTFToC8"><FONT SIZE=2 face=arial,helvetica,sans-serif>Digital videocast member properties</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif>and functions </FONT></H5><H6><A NAME="RTFToC9"><FONT SIZE=1 face=arial,helvetica,sans-serif>Digital videocast member properties</FONT></A><FONT SIZE=1 face=arial,helvetica,sans-serif><BR></FONT></H6><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=139><B>Symbol</B></TD><TD WIDTH=56><B>Type</B></TD><TD WIDTH=66><B>Get/Set</B></TD><TD WIDTH=185><B>Description</B></TD><TD WIDTH=58><B>Notes</B></TD></TR><TR><TD WIDTH=139><TT>loop</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=185>0=don't loop, 1=loop</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=139><TT>center</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=185>0=don't center, 1=center</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=139><TT>crop</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=185>0=scale, 1=crop</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=139><TT>sound</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=185>0=sound disabled, 1=sound enabled</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=139><TT>duration</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=66>G</TD><TD WIDTH=185>Duration of movie in ticks (1/60th second)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=139><TT>controller</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=185>0=hide controller, 1=show controller</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=139><TT>directToStage</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=185>0=composite (slower), 1=directToStage (faster)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=139><TT>frameRate</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=185>Framerate of movie: fixed frame rate or: 0=normal playback; <BR>-1=play every frame, normal rate; <BR>-2=play every frame, fast as possible.</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=139><TT>pausedAtStart</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=185>0=play immediately, 1=paused at start</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=139><TT>video</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=185>0=video disabled, 1=video enabled</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=139><TT>preload</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=185>0=disable preload into RAM, <BR>1=enable preload into RAM</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=139><TT>timeScale</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=66>G</TD><TD WIDTH=185>Time scale of movie</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=139><TT>tracks</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=66>G</TD><TD WIDTH=185>Track count: number of tracks in the movie</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=139><TT>track</TT></TD><TD WIDTH=56>symbol</TD><TD WIDTH=66>G</TD><TD WIDTH=185>Track type of track #1: <TT>#video</TT>, <TT>#sound</TT>, <TT>#text</FON>, #music</TT>, <TT>#timeCode</TT></TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=139><TT>startTime</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=66>G</TD><TD WIDTH=185>Start time of track #1</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=139><TT>stopTime</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=66>G</TD><TD WIDTH=185>Stop time of track #1</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=139><TT>digitalVideoType</TT></TD><TD WIDTH=56>symbol</TD><TD WIDTH=66>G</TD><TD WIDTH=185><TT>#quickTime</TT> or <TT>#videoForWindows</TT></TD><TD WIDTH=58></TD></TR></TABLE><H6><A NAME="RTFToC10"><FONT SIZE=1 face=arial,helvetica,sans-serif>Digital videocast member functions</FONT></A></H6><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=114><B>Name</B></TD><TD WIDTH=61><B>Returns</B></TD><TD WIDTH=329><B>Description</B></TD></TR><TR><TD WIDTH=114><TT>trackCount</TT></TD><TD WIDTH=61>integer</TD><TD WIDTH=329>No arguments; returns number of tracks; this is the same as getting <TT>&quot;tracks&quot;</TT> property</TD></TR><TR><TD WIDTH=114><TT>trackType</TT></TD><TD WIDTH=61>symbol</TD><TD WIDTH=329>argument 1: track number. Returns type of specified track. Similar to the <TT>&quot;track&quot;</TT> property but operates on any track.</TD></TR><TR><TD WIDTH=114><TT>trackStartTime</TT></TD><TD WIDTH=61>integer</TD><TD WIDTH=329>argument 1: track number. Returns start time of specified track. Similar to <TT>&quot;startTime&quot;</TT> property but operates on any track</TD></TR><TR><TD WIDTH=114><TT>trackStopTime</TT></TD><TD WIDTH=61>integer</TD><TD WIDTH=329>argument 1: track number. Returns stop time of specified track. Similar to <TT>&quot;stopTime&quot;</TT> property but operates on any track</TD></TR></TABLE><H5><A NAME="RTFToC11"><FONT SIZE=2 face=arial,helvetica,sans-serif>Directormovie cast member properties</FONT></A></H5><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=135><A NAME="_Toc348749236"><B>Symbol</B></A></TD><TD WIDTH=62><B>Type</B></TD><TD WIDTH=66><B>Get/Set</B></TD><TD WIDTH=183><B>Description</B></TD><TD WIDTH=58><B>Notes</B></TD></TR><TR><TD WIDTH=135><TT>loop</TT></TD><TD WIDTH=62>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=183>0=don't loop, 1=loop</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=135><TT>center</TT></TD><TD WIDTH=62>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=183>0=don't center, 1=center</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=135><TT>crop</TT></TD><TD WIDTH=62>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=183>0=scale, 1=crop</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=135><TT>sound</TT></TD><TD WIDTH=62>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=183>0=sound disabled, 1=sound enabled</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=135><TT>scriptsEnabled</TT></TD><TD WIDTH=62>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=183>0=scripts disabled, 1=scripts enabled</TD><TD WIDTH=58></TD></TR></TABLE><H5><A NAME="RTFToC12"><FONT SIZE=2 face=arial,helvetica,sans-serif>Filmloopcast member properties</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif></FONT></H5><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=83><B>Symbol</B></TD><TD WIDTH=64><B>Type</B></TD><TD WIDTH=68><B>Get/Set</B></TD><TD WIDTH=229><B>Description</B></TD><TD WIDTH=60><B>Notes</B></TD></TR><TR><TD WIDTH=83><TT>loop</TT></TD><TD WIDTH=64>integer</TD><TD WIDTH=68>G/S</TD><TD WIDTH=229>0=don't loop, 1=loop</TD><TD WIDTH=60></TD></TR><TR><TD WIDTH=83><TT>center</TT></TD><TD WIDTH=64>integer</TD><TD WIDTH=68>G/S</TD><TD WIDTH=229>0=don't center, 1=center</TD><TD WIDTH=60></TD></TR><TR><TD WIDTH=83><TT>crop</TT></TD><TD WIDTH=64>integer</TD><TD WIDTH=68>G/S</TD><TD WIDTH=229>0=scale, 1=crop</TD><TD WIDTH=60></TD></TR><TR><TD WIDTH=83><TT>sound</TT></TD><TD WIDTH=64>integer</TD><TD WIDTH=68>G/S</TD><TD WIDTH=229>0=sound disabled, 1=sound enabled</TD><TD WIDTH=60></TD></TR></TABLE><H5><A NAME="RTFToC13"><FONT SIZE=2 face=arial,helvetica,sans-serif>OLE castmember properties</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif> </FONT></H5><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=108><B>Symbol</B></TD><TD WIDTH=77><B>Type</B></TD><TD WIDTH=66><B>Get/Set</B></TD><TD WIDTH=196><B>Description</B></TD><TD WIDTH=58><B>Notes</B></TD></TR><TR><TD WIDTH=108><TT>depth</TT></TD><TD WIDTH=77>integer</TD><TD WIDTH=66>G</TD><TD WIDTH=196>Pixel depth of bitmap (1,2,4,8,16,32)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=108><TT>palette</TT></TD><TD WIDTH=77>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=196>Palette of cast member as integer (negative numbers indicate built-in palettes, positive numbers indicate cast-based palette</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=108><TT>paletteRef</TT></TD><TD WIDTH=77>castMem/ <BR>symbol</TD><TD WIDTH=66>G/S</TD><TD WIDTH=196>Palette of cast member as <TT>castMemRef</TT> (cast-based palette) or symbol (built-in palette)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=108><TT>maskMember</TT></TD><TD WIDTH=77>castMem</TD><TD WIDTH=66>G</TD><TD WIDTH=196><TT>CastMemRef</TT> of cast member to be used as mask if mask ink applied</TD><TD WIDTH=58></TD></TR></TABLE><H5><A NAME="RTFToC14"><FONT SIZE=2 face=arial,helvetica,sans-serif>Rich Text(RTF) cast member properties</FONT></A></H5><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=99><B>Symbol</B></TD><TD WIDTH=62><B>Type</B></TD><TD WIDTH=66><B>Get/Set</B></TD><TD WIDTH=219><B>Description</B></TD><TD WIDTH=58><B>Notes</B></TD></TR><TR><TD WIDTH=99><TT>text</TT></TD><TD WIDTH=62>string</TD><TD WIDTH=66>G/S</TD><TD WIDTH=219>The characters of the rich text. Set only supported in authoring mode</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=99><TT>scrollTop</TT></TD><TD WIDTH=62>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=219>Vertical scroll offset (pixels)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=99><TT>pageHeight</TT></TD><TD WIDTH=62>integer</TD><TD WIDTH=66>G</TD><TD WIDTH=219>Vertical size of visible area (page) in scrolling field (pixels)</TD><TD WIDTH=58></TD></TR></TABLE><H5><A NAME="RTFToC15"><FONT SIZE=2 face=arial,helvetica,sans-serif>Script castmember properties</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif> </FONT></H5><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=108><B>Symbol</B></TD><TD WIDTH=66><B>Type</B></TD><TD WIDTH=66><B>Get/Set</B></TD><TD WIDTH=207><B>Description</B></TD><TD WIDTH=58><B>Notes</B></TD></TR><TR><TD WIDTH=108><TT>scriptType</TT></TD><TD WIDTH=66>symbol</TD><TD WIDTH=66>G/S</TD><TD WIDTH=207>Type of script: <TT>#score</TT>, <TT>#movie</TT>, <TT>#parent</FO></TT></TD><TD WIDTH=58></TD></TR></TABLE><H5><A NAME="RTFToC16"><FONT SIZE=2 face=arial,helvetica,sans-serif>Shape castmember properties</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif> </FONT></H5><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=101><B>Symbol</B></TD><TD WIDTH=66><B>Type</B></TD><TD WIDTH=66><B>Get/Set</B></TD><TD WIDTH=214><B>Description</B></TD><TD WIDTH=58><B>Notes</B></TD></TR><TR><TD WIDTH=101><TT>shapeType</TT></TD><TD WIDTH=66>symbol</TD><TD WIDTH=66>G/S</TD><TD WIDTH=214>Shape type: <TT>#rect</TT>, <TT>#roundRect</TT>, <TT>#oval</TT> , <TT>#line</TT></TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=101><TT>lineSize</TT></TD><TD WIDTH=66>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=214>Line thickness (pixels)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=101><TT>pattern</TT></TD><TD WIDTH=66>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=214>Pattern index (1-64)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=101><TT>filled</TT></TD><TD WIDTH=66>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=214>0=unfilled, 1=filled</TD><TD WIDTH=58></TD></TR></TABLE><H5><A NAME="RTFToC17"><FONT SIZE=2 face=arial,helvetica,sans-serif>Sound castmember properties</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif> </FONT></H5><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=122><B>Symbol</B></TD><TD WIDTH=62><B>Type</B></TD><TD WIDTH=66><B>Get/Set</B></TD><TD WIDTH=196><B>Description</B></TD><TD WIDTH=58><B>Notes</B></TD></TR><TR><TD WIDTH=122><TT>loop</TT></TD><TD WIDTH=62>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=196>0=disable looping, 1=enable looping</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=122><TT>sampleSize</TT></TD><TD WIDTH=62>integer</TD><TD WIDTH=66>G</TD><TD WIDTH=196>Number of bits per sample (typically 8 or 16)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=122><TT>sampleRate</TT></TD><TD WIDTH=62>integer</TD><TD WIDTH=66>G</TD><TD WIDTH=196>Samples per second</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=122><TT>channelCount</TT></TD><TD WIDTH=62>integer</TD><TD WIDTH=66>G</TD><TD WIDTH=196>Number of channels (1=mono, 2=stereo)</TD><TD WIDTH=58></TD></TR></TABLE><H5><A NAME="RTFToC18"><FONT SIZE=2 face=arial,helvetica,sans-serif>Text castmember properties</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif> andfunctions</FONT></H5><H6><A NAME="RTFToC19"><FONT SIZE=1 face=arial,helvetica,sans-serif>Text castmember properties</FONT></A><FONT SIZE=1 face=arial,helvetica,sans-serif> </FONT></H6><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=128><B>Symbol</B></TD><TD WIDTH=66><B>Type</B></TD><TD WIDTH=66><B>Get/Set</B></TD><TD WIDTH=186><B>Description</B></TD><TD WIDTH=58><B>Notes</B></TD></TR><TR><TD WIDTH=128><TT>text</TT></TD><TD WIDTH=66>string</TD><TD WIDTH=66>G/S</TD><TD WIDTH=186>The characters in the text field (null-terminated)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>textStyle</TT></TD><TD WIDTH=66>string </TD><TD WIDTH=66>G/S</TD><TD WIDTH=186>The styles used in the text field, comma-delimited, combo of: <TT>&quot;bold&quot;</TT>, <TT>&quot;italic&quot; /FONT&gt;, &quot;underline&quot;</TT>, <TT>&quot;outline&quot;</TT>, <TT>&quot;shadow&quot;</TT>, <TT>&quot;condense&quot;</TT>, <TT>&quot;extend&quot;</TT></TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>textFont</TT></TD><TD WIDTH=66>string</TD><TD WIDTH=66>G/S</TD><TD WIDTH=186>The font of the entire text field</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>textHeight</TT></TD><TD WIDTH=66>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=186>The line height of every line in the text field</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>textSize</TT></TD><TD WIDTH=66>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=186>The font size of every character in the text field</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>foreColor</TT></TD><TD WIDTH=66>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=186>The foreground color index of every character in the text field</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>backColor</TT></TD><TD WIDTH=66>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=186>The background color of the text field</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>textAlign</TT></TD><TD WIDTH=66>string</TD><TD WIDTH=66>G/S</TD><TD WIDTH=186>The alignment mode as a string: <TT>&quot;left&quot;</TT>, <TT>&quot;center&quot;</TT>, <TT>&quot;right&quot;</TT></TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>boxType</TT></TD><TD WIDTH=66>symbol</TD><TD WIDTH=66>G/S</TD><TD WIDTH=186>Text box type: <TT>#adjust</TT>, <TT>#scroll</TT>, <TT>#fixed</FO>, #limit</TT></TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>border</TT></TD><TD WIDTH=66>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=186>Text border size (pixels)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>margin</TT></TD><TD WIDTH=66>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=186>Text margin size (pixels)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>scrollTop</TT></TD><TD WIDTH=66>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=186>Vertical scroll offset (pixels)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>dropShadow</TT></TD><TD WIDTH=66>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=186>Character drop shadow size (pixels)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>boxDropShadow</TT></TD><TD WIDTH=66>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=186>Box drop shadow size (pixels)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>autoTab</TT></TD><TD WIDTH=66>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=186>0=autoTab disabled, 1=autoTab enabled</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>wordWrap</TT></TD><TD WIDTH=66>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=186>0=wordWrap disabled, 1=wordWrap enabled</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>editable</TT></TD><TD WIDTH=66>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=186>0=not editable, 1=editable</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>pageHeight</TT></TD><TD WIDTH=66>integer</TD><TD WIDTH=66>G</TD><TD WIDTH=186>Vertical size of visible area (page) in scrolling field (pixels)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=128><TT>lineCount</TT></TD><TD WIDTH=66>integer</TD><TD WIDTH=66>G</TD><TD WIDTH=186>Number of lines in text field</TD><TD WIDTH=58></TD></TR></TABLE><H6><A NAME="RTFToC20"><FONT SIZE=1 face=arial,helvetica,sans-serif>Text castmember functions</FONT></A><FONT SIZE=1 face=arial,helvetica,sans-serif> </FONT></H6><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=115><B>Name</B></TD><TD WIDTH=68><B>Returns</B></TD><TD WIDTH=321><B>Description</B></TD></TR><TR><TD WIDTH=115><TT>lineHeight</TT></TD><TD WIDTH=68>integer</TD><TD WIDTH=321>argument 1: line number. Returns height of specified line (pixels)</TD></TR><TR><TD WIDTH=115><TT>linePosToLocV</TT></TD><TD WIDTH=68>integer</TD><TD WIDTH=321>argument 1: <TT>linePosition</TT>. Returns vertical pixel offset from line position</TD></TR><TR><TD WIDTH=115><TT>locVtoLinePos</TT></TD><TD WIDTH=68>integer</TD><TD WIDTH=321>argument 1: <TT>locV</TT>. Returns line position from vertical pixel offset</TD></TR><TR><TD WIDTH=115><TT>charPosToLoc</TT></TD><TD WIDTH=68>point</TD><TD WIDTH=321>argument 1: character position. Returns (x,y) point offset for given character</TD></TR><TR><TD WIDTH=115><TT>locToCharPos</TT></TD><TD WIDTH=68>integer</TD><TD WIDTH=321>argument 1: location (point). Returns character position from given point</TD></TR><TR><TD WIDTH=115><TT>scrollByPage</TT></TD><TD WIDTH=68>void</TD><TD WIDTH=321>argument 1: page offset. Scroll up or down <I>n </I>pages ( <I>n</I> &lt; 0 for down, <I>n </I>&gt; 0 for up)</TD></TR><TR><TD WIDTH=115><TT>scrollByLine</TT></TD><TD WIDTH=68>void</TD><TD WIDTH=321>argument 1: line offset. Scroll up or down <I>n </I>lines ( <I>n </I>&lt; 0 for down, <I>n </I>&gt; 0 for up)</TD></TR></TABLE><H5><A NAME="RTFToC21"><FONT SIZE=2 face=arial,helvetica,sans-serif>Xtra castmember properties</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif> </FONT></H5><P>The Sprite Xtra developer can define and support any other propertiesdesired through the implementation of the <TT>GetProp()</TT>and <TT>SetProp()</TT> methodsof the <TT>IMoaMmXAsset</TT>interface. <H4><A NAME="MOVPROPS"><FONT face=arial,helvetica,sans-serif>Movie properties</FONT></A><FONT face=arial,helvetica,sans-serif></FONT></H4><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=145><B>Symbol</B></TD><TD WIDTH=56><B>Type</B></TD><TD WIDTH=85><B>Get/Set</B></TD><TD WIDTH=109><B>Description</B></TD><TD WIDTH=109><B>Notes</B></TD></TR><TR><TD WIDTH=145><TT>name</TT></TD><TD WIDTH=56>string</TD><TD WIDTH=85>G</TD><TD WIDTH=109>Filename of the movie (not full path)</TD><TD WIDTH=109></TD></TR><TR><TD WIDTH=145><TT>pathName</TT></TD><TD WIDTH=56>string</TD><TD WIDTH=85>G</TD><TD WIDTH=109>Full pathname of the movie</TD><TD WIDTH=109></TD></TR><TR><TD WIDTH=145><TT>createName</TT></TD><TD WIDTH=56>string</TD><TD WIDTH=85>G/S</TD><TD WIDTH=109>Name of user who authored the movie</TD><TD WIDTH=109>May not be valid until movie is saved</TD></TR><TR><TD WIDTH=145><TT>modifyName</TT></TD><TD WIDTH=56>string</TD><TD WIDTH=85>G/S</TD><TD WIDTH=109>Name of user who last modified the movie</TD><TD WIDTH=109>May not be valid until movie is saved</TD></TR><TR><TD WIDTH=145><TT>playing</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=85>G</TD><TD WIDTH=109>0 = movie is stopped in author mode, 1 = movie is playing</TD><TD WIDTH=109></TD></TR><TR><TD WIDTH=145><TT>defaultColorDepth</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=85>G</TD><TD WIDTH=109>Default color depth for new movies: 1,2,4,8,16,32.</TD><TD WIDTH=109>May not be valid until movie is saved</TD></TR><TR><TD WIDTH=145><TT>defaultStageRect</TT></TD><TD WIDTH=56>rect</TD><TD WIDTH=85>G</TD><TD WIDTH=109>Default stage rectangle for new movies</TD><TD WIDTH=109>May not be valid until movie is saved</TD></TR><TR><TD WIDTH=145><TT>tempo</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=85>G/S</TD><TD WIDTH=109>Current tempo setting (requested tempo, not actual)</TD><TD WIDTH=109></TD></TR><TR><TD WIDTH=145><TT>defaultPalette</TT></TD><TD WIDTH=56>castMem/symbol</TD><TD WIDTH=85>G/S</TD><TD WIDTH=109>Default palette for new movies</TD><TD WIDTH=109><TT>CastMem </TT>(for cast-based pal) or Symbol (for built-in pal) value accepted</TD></TR><TR><TD WIDTH=145><TT>remapPalettes</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=85>G/S</TD><TD WIDTH=109>0 = don't remap bitmaps on the fly, 1 = remap to cur palette</TD><TD WIDTH=109></TD></TR><TR><TD WIDTH=145><TT>castCount</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=85>G</TD><TD WIDTH=109>The number of casts (internal + external) in the movie</TD><TD WIDTH=109></TD></TR><TR><TD WIDTH=145><TT>stageColor</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=85>G/S</TD><TD WIDTH=109>The palette index of the movie stage's background color</TD><TD WIDTH=109>Range depends on current pixel depth (0-255 max)</TD></TR><TR><TD WIDTH=145><TT>frame</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=85>G/S</TD><TD WIDTH=109>The frame number where the playback head currently is</TD><TD WIDTH=109>Setting this does a <TT>&quot;go to frame&quot;</TT></TD></TR><TR><TD WIDTH=145><I>Authoring-only</I></TD><TD WIDTH=56></TD><TD WIDTH=85></TD><TD WIDTH=109></TD><TD WIDTH=109></TD></TR><TR><TD WIDTH=145><TT>activeCastLib</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=85>G</TD><TD WIDTH=109>Movie cast index of the <TT>&quot;active&quot; </TT>cast</TD><TD WIDTH=109>An active cast is one whose cast window was most recently active</TD></TR><TR><TD WIDTH=145><TT>scoreSelection</TT></TD><TD WIDTH=56>linear list</TD><TD WIDTH=85>G/S</TD><TD WIDTH=109>List indicating current score selection</TD><TD WIDTH=109>Only valid for main movie. It's a list of lists; each sublist specifies a rectangular portion of the selection. For example, [[topSprite, bottomSprite, firstFrame, lastFrame]]</TD></TR></TABLE><H4><A NAME="PALPROPS"><FONT face=arial,helvetica,sans-serif>Palette properties</FONT></A><FONT face=arial,helvetica,sans-serif></FONT></H4><P>There are no palette-specific MOA properties.<H4><A NAME="PLAYPROPS"><FONT face=arial,helvetica,sans-serif>Player properties</FONT></A><FONT face=arial,helvetica,sans-serif></FONT></H4><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=145><B>Symbol</B></TD><TD WIDTH=56><B>Type</B></TD><TD WIDTH=85><B>Get/Set</B></TD><TD WIDTH=109><B>Description</B></TD><TD WIDTH=109><B>Notes</B></TD></TR><TR><TD WIDTH=145><TT>name</TT></TD><TD WIDTH=56>string</TD><TD WIDTH=85>G</TD><TD WIDTH=109>Filename of the movie (not full path)</TD><TD WIDTH=109></TD></TR><TR><TD WIDTH=145><TT>pathName</TT></TD><TD WIDTH=56>string</TD><TD WIDTH=85>G</TD><TD WIDTH=109>Full pathname of the movie</TD><TD WIDTH=109></TD></TR><TR><TD WIDTH=145><TT>createName</TT></TD><TD WIDTH=56>string</TD><TD WIDTH=85>G/S</TD><TD WIDTH=109>Name of user who authored the movie</TD><TD WIDTH=109>May not be valid until movie is saved</TD></TR><TR><TD WIDTH=145><TT>modifyName</TT></TD><TD WIDTH=56>string</TD><TD WIDTH=85>G/S</TD><TD WIDTH=109>Name of user who last modified the movie</TD><TD WIDTH=109>May not be valid until movie is saved</TD></TR><TR><TD WIDTH=145><TT>playing</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=85>G</TD><TD WIDTH=109>0 = movie is stopped in author mode, 1 = movie is playing</TD><TD WIDTH=109></TD></TR><TR><TD WIDTH=145><TT>defaultColorDepth</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=85>G</TD><TD WIDTH=109>Default color depth for new movies: 1,2,4,8,16,32.</TD><TD WIDTH=109>May not be valid until movie is saved</TD></TR><TR><TD WIDTH=145><TT>defaultStageRect</TT></TD><TD WIDTH=56>rect</TD><TD WIDTH=85>G</TD><TD WIDTH=109>Default stage rectangle for new movies</TD><TD WIDTH=109>May not be valid until movie is saved</TD></TR><TR><TD WIDTH=145><TT>tempo</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=85>G/S</TD><TD WIDTH=109>Current tempo setting (requested tempo, not actual)</TD><TD WIDTH=109></TD></TR><TR><TD WIDTH=145><TT>defaultPalette</TT></TD><TD WIDTH=56>castMem/symbol</TD><TD WIDTH=85>G/S</TD><TD WIDTH=109>Default palette for new movies</TD><TD WIDTH=109><TT>CastMem </TT>(for cast-based pal) or Symbol (for built-in pal) value accepted</TD></TR><TR><TD WIDTH=145><TT>remapPalettes</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=85>G/S</TD><TD WIDTH=109>0 = don't remap bitmaps on the fly, 1 = remap to cur palette</TD><TD WIDTH=109></TD></TR><TR><TD WIDTH=145><TT>castCount</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=85>G</TD><TD WIDTH=109>The number of casts (internal + external) in the movie</TD><TD WIDTH=109></TD></TR><TR><TD WIDTH=145><TT>stageColor</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=85>G/S</TD><TD WIDTH=109>The palette index of the movie stage's background color</TD><TD WIDTH=109>Range depends on current pixel depth (0-255 max)</TD></TR><TR><TD WIDTH=145><TT>frame</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=85>G/S</TD><TD WIDTH=109>The frame number where the playback head currently is</TD><TD WIDTH=109>Setting this does a <TT>&quot;go to frame&quot;</TT></TD></TR><TR><TD WIDTH=145><I>Authoring-only</I></TD><TD WIDTH=56></TD><TD WIDTH=85></TD><TD WIDTH=109></TD><TD WIDTH=109></TD></TR><TR><TD WIDTH=145><TT>activeCastLib</TT></TD><TD WIDTH=56>integer</TD><TD WIDTH=85>G</TD><TD WIDTH=109>Movie cast index of the <TT>&quot;active&quot; </TT>cast</TD><TD WIDTH=109>An active cast is one whose cast window was most recently active</TD></TR><TR><TD WIDTH=145><TT>scoreSelection</TT></TD><TD WIDTH=56>linear list</TD><TD WIDTH=85>G/S</TD><TD WIDTH=109>List indicating current score selection</TD><TD WIDTH=109>Only valid for main movie. It's a list of lists; each sublist specifies a rectangular portion of the selection. For example, [[topSprite, bottomSprite, firstFrame, lastFrame]]</TD></TR></TABLE><H4><A NAME="FRMPROPS"><FONT face=arial,helvetica,sans-serif>Score frame properties</FONT></A><FONT face=arial,helvetica,sans-serif></FONT></H4><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=175><B>Symbol</B></TD><TD WIDTH=61><B>Type</B></TD><TD WIDTH=61><B>Get/Set</B></TD><TD WIDTH=206><B>Description</B></TD></TR><TR><TD WIDTH=175><TT>tempo</TT></TD><TD WIDTH=61>integer</TD><TD WIDTH=61>G/S</TD><TD WIDTH=206>Frame tempo in FPS, 0 to clear cell completely</TD></TR><TR><TD WIDTH=175><TT>waitSeconds</TT></TD><TD WIDTH=61>integer</TD><TD WIDTH=61>G/S</TD><TD WIDTH=206>Wait in seconds, returns 0 if not <TT>waitSeconds</TT>, set to 0 to clear cell</TD></TR><TR><TD WIDTH=175><TT>waitClick</TT></TD><TD WIDTH=61>integer</TD><TD WIDTH=61>G/S</TD><TD WIDTH=206>Wait for mouse click, returns 0 if not <TT>waitClick</TT>, set to 0 to clear cell</TD></TR><TR><TD WIDTH=175><TT>waitSound</TT></TD><TD WIDTH=61>integer</TD><TD WIDTH=61>G/S</TD><TD WIDTH=206>Specify sound channel number (1-2), returns 0 if not <TT>waitSound</TT>, set to 0 to clear cell</TD></TR><TR><TD WIDTH=175><TT>waitDigitalVideo</TT></TD><TD WIDTH=61>integer</TD><TD WIDTH=61>G/S</TD><TD WIDTH=206>Specify sprite channel number (1-48), returns 0 if not <TT>waitDigitalVideo</TT>, set to 0 to clear cell</TD></TR><TR><TD WIDTH=175><TT>palette</TT></TD><TD WIDTH=61>integer</TD><TD WIDTH=61>G/S</TD><TD WIDTH=206>Access palette as integer (negative numbers indicate built-in palettes), setting defaults to instant normal palette transition, set to 0 to clear cell</TD></TR><TR><TD WIDTH=175><TT>paletteRef</TT></TD><TD WIDTH=61>castMem <BR>/symbol</TD><TD WIDTH=61>G/S</TD><TD WIDTH=206>Access palette as castMem/<BR>symbol (symbols indicate built-in palettes), setting defaults to instant normal palette transition, set to <TT>castMem(0,0)</TT> to clear cell</TD></TR><TR><TD WIDTH=175><TT>paletteTransitionType</TT></TD><TD WIDTH=61>symbol</TD><TD WIDTH=61>G/S</TD><TD WIDTH=206>&quot;<TT>#normal</TT>, <TT>#fadeToBlack</TT>, <TT>#fadeToWhite</>. Setting this clears paletteOverTime </TT>to 0</TD></TR><TR><TD WIDTH=175><TT>paletteOverTime</TT></TD><TD WIDTH=61>integer</TD><TD WIDTH=61>G/S</TD><TD WIDTH=206>0=transition palette between frames, <BR>1 = transition palette over time, <BR>setting to 1 ignores <TT>paletteSpeed</TT></TD></TR><TR><TD WIDTH=175><TT>paletteFrames</TT></TD><TD WIDTH=61>integer</TD><TD WIDTH=61>G/S</TD><TD WIDTH=206>1-n, <BR>setting &gt; 0 switches to <TT>paletteOverTime</TT>, set to 0 to clear (turns off <TT>overTime</TT>)</TD></TR><TR><TD WIDTH=175><TT>paletteSpeed</TT></TD><TD WIDTH=61>integer</TD><TD WIDTH=61>G/S</TD><TD WIDTH=206>1-30, setting this causes <TT>paletteOverTime </TT>to be ignored</TD></TR><TR><TD WIDTH=175><TT>transition</TT></TD><TD WIDTH=61>castMem</TD><TD WIDTH=61>G/S</TD><TD WIDTH=206>Transition <TT>castMemRef</TT>, set to castMem(0,0) to clear cell</TD></TR><TR><TD WIDTH=175><TT>script</TT></TD><TD WIDTH=61>castMem</TD><TD WIDTH=61>G/S</TD><TD WIDTH=206>Script <TT>castMemRef</TT>, set to castMem(0,0) to clear cell</TD></TR></TABLE><H4><A NAME="SCSNDPROPS"><FONT face=arial,helvetica,sans-serif>Score sound properties</FONT></A><FONT face=arial,helvetica,sans-serif></FONT></H4><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=108><B>Symbol</B></TD><TD WIDTH=73><B>Type</B></TD><TD WIDTH=66><B>Get/Set</B></TD><TD WIDTH=199><B>Description</B></TD><TD WIDTH=58><B>Notes</B></TD></TR><TR><TD WIDTH=108><TT>member</TT></TD><TD WIDTH=73>castMem</TD><TD WIDTH=66>G/S</TD><TD WIDTH=199>Sound <TT>castMemRef</TT>, set to castMem(0,0) to clear cell</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=108><TT>scoreColor</TT></TD><TD WIDTH=73>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=199>Score color index (0-5)</TD><TD WIDTH=58></TD></TR></TABLE><H4><A NAME="SCSPPROPS"><FONT face=arial,helvetica,sans-serif>Score sprite properties</FONT></A><FONT face=arial,helvetica,sans-serif></FONT></H4><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=108><B>Symbol</B></TD><TD WIDTH=73><B>Type</B></TD><TD WIDTH=66><B>Get/Set</B></TD><TD WIDTH=199><B>Description</B></TD><TD WIDTH=58><B>Notes</B></TD></TR><TR><TD WIDTH=108><TT>member</TT></TD><TD WIDTH=73>castMem</TD><TD WIDTH=66>G/S</TD><TD WIDTH=199>Sound <TT>castMemRef</TT>, set to castMem(0,0) to clear cell</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=108><TT>scoreColor</TT></TD><TD WIDTH=73>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=199>Score color index (0-5)</TD><TD WIDTH=58></TD></TR></TABLE><H5><A NAME="RTFToC28"><FONT SIZE=2 face=arial,helvetica,sans-serif>Xtra spriteactor properties</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif> </FONT></H5><P>The Sprite Xtra developer can support any other properties desiredthrough the implementation of the <TT>GetProp()</TT>and <TT>SetProp()</TT> methodsof the <TT>IMoaMmXSpriteActor </TT>interface.<H4><A NAME="TRASPROPS"><FONT face=arial,helvetica,sans-serif>Transition assetproperties</FONT></A><FONT face=arial,helvetica,sans-serif> </FONT></H4><H5><A NAME="RTFToC30"><FONT SIZE=2 face=arial,helvetica,sans-serif>General transitionproperties</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif> </FONT></H5><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=135><B>Symbol</B></TD><TD WIDTH=62><B>Type</B></TD><TD WIDTH=66><B>Get/Set</B></TD><TD WIDTH=183><B>Description</B></TD><TD WIDTH=58><B>Notes</B></TD></TR><TR><TD WIDTH=135><TT>transitionType</TT></TD><TD WIDTH=62>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=183>Transition ID (for built-in transitions only)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=135><TT>duration</TT></TD><TD WIDTH=62>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=183>Transition duration (ms: 0-32000)</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=135><TT>changeArea</TT></TD><TD WIDTH=62>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=183>0=Full-screen, 1=Change-area only</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=135><TT>chunkSize</TT></TD><TD WIDTH=62>integer</TD><TD WIDTH=66>G/S</TD><TD WIDTH=183>Chunk size (opposite of smoothness) 1-128</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=135><TT>&lt;Custom Props&gt;</TT></TD><TD WIDTH=62></TD><TD WIDTH=66></TD><TD WIDTH=183>Additional custom properties may be supported by Xtra-based transitions. See Xtra's documentation.</TD><TD WIDTH=58></TD></TR><TR><TD WIDTH=135><TT>&lt;Custom Funcs&gt;</TT></TD><TD WIDTH=62></TD><TD WIDTH=66></TD><TD WIDTH=183>Custom functions may be supported by Xtra-based transitions. See Xtra's documentation.</TD><TD WIDTH=58></TD></TR></TABLE><H5><A NAME="RTFToC31"><FONT SIZE=2 face=arial,helvetica,sans-serif>Xtra transitionproperties</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif> </FONT></H5><P>The Transition Xtra developer can support any other propertiesdesired through the implementation of the <TT>GetProp()</TT>and <TT>SetProp()</TT> methodsof the <TT>IMoaMmXAsset </TT>interface.<P><HR width=45% align=left><H3><FONT SIZE=4 face=arial,helvetica,sans-serif><A NAME="DRTYPES">Director Types</A></FONT></H3><P>Defined in: drtypes.h<H4><A NAME="RTFToC33"><FONT face=arial,helvetica,sans-serif>Cast member types</FONT></A><FONT face=arial,helvetica,sans-serif></FONT></H4><H5><A NAME="MoaDrCastIndex"><FONT SIZE=2 face=arial,helvetica,sans-serif>MoaDrCastIndex</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif>,<BR>PMoaDrCastIndex, <BR>ConstPMoaDrCastIndex </FONT></H5><P><TT>MoaDrCastIndex MoaLong</TT>representing the index of a cast <P><TT>PMoaDrCastIndex </TT>Pointerto the <TT>MoaDrCastIndex</TT>of a cast <P><TT>ConstPMoaDrCastIndex </TT>Pointerto a constant <TT>MoaDrMemberIndex</TT><A NAME="MoaDrCmRef"></A><H5><FONT SIZE=2 face=arial,helvetica,sans-serif>MoaDrCMRef</FONT><FONT SIZE=2 face=arial,helvetica,sans-serif>,<BR>PMoaDrCMRef, <BR><A NAME="RTFToC36">ConstPMoaDrCMRef</A> </FONT></H5><PRE>typedef struct{	MoaDrCastIndex movieCastIndex; 	MoaDrMemberIndex memberIndex; } MoaDrCMRef, FAR * PMoaDrCMRef;</PRE><P><TABLE BORDER="2"><TR><TD WIDTH=114><TT>movieCastIndex</TT> </TD><TD WIDTH=390>Index of the cast to which the member belongs</TD></TR><TR><TD WIDTH=114><TT>memberIndex</TT> </TD><TD WIDTH=390>Index of the cast member</TD></TR></TABLE><P>The cast member reference structure represents a specific castmember in a specific cast. Use the accessors, described in themacros section of this reference, to access members of these structures.<P><TT>MoaDrCMRef T</TT>ype ofa cast member reference structure<P><TT>PMoaDrCMRef </TT>Pointerto a cast member reference structure<P><TT>ConstPMoaDrCMRef </TT>Constantpointer to a cast member reference structure<H5><A NAME="MoaDrMemberIndex"><FONT SIZE=2 face=arial,helvetica,sans-serif>MoaDrMemberIndex</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif>,<BR>PMoaDrMemberIndex, <BR>ConstPMoaDrMemberIndex </FONT></H5><P><TT>MoaDrMemberIndex MoaLong</TT>type representing a MOA cast member. <P><TT>PMoaDrMemberIndex </TT>Pointerto the <TT>MoaDrMemberIndex</TT>of a cast member <P><TT>ConstPMoaDrMemberIndex </TT>Pointerto a constant <TT>MoaDrMemberIndex</TT><H4><A NAME="RTFToC41"><FONT face=arial,helvetica,sans-serif>Media access types</FONT></A><FONT face=arial,helvetica,sans-serif></FONT></H4><H5><A NAME="MoaDrAccessInfo"><FONT SIZE=2 face=arial,helvetica,sans-serif>MoaDrAccessInfo</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif>,<BR>PMoaDrAccessInfo,<BR>ConstPMoaDrAccessInfo</> </FONT></H5><PRE>typedef struct{	struct IMoaDrMediaOwner FAR * pOwner;	MoaMmSymbol labelSymbol;	MoaMmSymbol formatSymbol; } MoaDrAccessInfo</PRE><P><TABLE BORDER="2"><TR><TD WIDTH=99><TT>pOwner</TT> </TD><TD WIDTH=405>Interface of the object owning the media</TD></TR><TR><TD WIDTH=99><TT>labelSymbol</TT> </TD><TD WIDTH=405>label of media </TD></TR><TR><TD WIDTH=99><TT>formatSymbol</TT> </TD><TD WIDTH=405>format of media</TD></TR></TABLE><P>Structure representing information used by the <TT>MediaAccess</TT>interface. <TT>MediaAccess</TT>and <TT>ScoreAccess </TT>interfaceproviders handle communication with the media owner object toprovide a task-specific interface for accessing its media.<P><TT>MoaDrAccessInfo </TT>Structurerepresenting media access information<P><TT>PMoaDrAccessInfo </TT>Pointerto a <TT>MoaDrAccessInfo</TT>structure<P><TT>ConstPMoaDrAccessInfo </TT>Constantpointer to a <TT>MoaDrAccessInfo</TT>structure<H5><A NAME="MoaDrImageAuxInfo"><FONT SIZE=2 face=arial,helvetica,sans-serif>MoaDrImageAuxInfo</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif>,<BR>PMoaDrImageAuxInfo,<BR>ConstPMoaDrImageAuxInfo </FONT></H5><PRE>typedef struct{	MoaLong pixelDepth;	MoaMmSymbol paletteSymbol; 	MoaDrCMRef paletteCMRef; 	MoaBoolParam dither; } MoaDrImageAuxInfo</PRE><P><TABLE BORDER="2"><TR><TD WIDTH=104><TT>pixelDepth</TT> </TD><TD WIDTH=400>Pixel depth: 1, 2, 4, 8, 16, 32</TD></TR><TR><TD WIDTH=104><TT>paletteSymbol</TT> </TD><TD WIDTH=400>Symbol of built-in palette to use, 0 to use <TT>paletteCMRef</TT></TD></TR><TR><TD WIDTH=104><TT>paletteCMRef</TT> </TD><TD WIDTH=400><TT>MoaDrCMRef </TT>of cast-based palette to use. <TT><I>paletteSymbol </I></TT>must be set for this field.</TD></TR><TR><TD WIDTH=104><TT>dither</TT> </TD><TD WIDTH=400>TRUE: dither, FALSE: remap</TD></TR></TABLE><P>This structure applies only when setting image media. When specifying<TT>kMoaDrImgMediaOpts</TT>_AuxInfooption for setting image media, the <TT>&quot;aux&quot;</TT>field of your <TT>MoaDrMediaInfo</TT>structure must be a FAR * (pointer) to a caller-owned <TT>MoaDrImageAuxInfo</TT>structure. This permits explicit definition of the pixel depth,associated palette cast member, and resampling option (ditheror remap) to be used.<P><TT>MoaDrImageAuxInfo </TT>Structurerepresenting auxilliary information<P><TT>PMoaDrImageAuxInfo </TT>Pointerto a <TT>MoaDrImageAuxInfo</TT>structure<P><TT>ConstPMoaDrImageAuxInfo </TT>Constantpointer to a <TT>MoaDrImageAuxInfo</TT>structure<H5><A NAME="MoaDrMediaInfo"><FONT SIZE=2 face=arial,helvetica,sans-serif>MoaDrMediaInfo</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif>,<BR><A NAME="RTFToC45">PMoaDrMediaInfo,</A><BR><A NAME="RTFToC46">ConstPMoaDrMediaInfo</A> </FONT></H5><PRE>typedef struct{	MoaMmSymbol labelSymbol;	MoaMmSymbol formatSymbol;	PMoaVoid mediaData;	MoaDrMediaOpts options;	PMoaVoid aux;	PMoaVoid refCon; } MoaDrMediaInfo</PRE><P><TABLE BORDER="2"><TR><TD WIDTH=99><TT>labelSymbol</TT> </TD><TD WIDTH=405>Label of media to set/get </TD></TR><TR><TD WIDTH=99><TT>formatSymbol</TT> </TD><TD WIDTH=405>Format of media to set/get</TD></TR><TR><TD WIDTH=99><TT>mediaData</TT> </TD><TD WIDTH=405>Media data </TD></TR><TR><TD WIDTH=99><TT>options</TT> </TD><TD WIDTH=405>Get/set options</TD></TR><TR><TD WIDTH=99><TT>aux</TT> </TD><TD WIDTH=405>Auxiliary data</TD></TR><TR><TD WIDTH=99><TT>refCon</TT> </TD><TD WIDTH=405>Reserved </TD></TR></TABLE><P>Structure providing information about media in a movie. Valuesof this type are passed as arguments to the <TT>IMoaDrCastMember</TT>and <TT>IMoaDrMovie</TT> methods<TT>GetMedia()</TT> and <TT>SetMedia()</TT>.<P><TT>MoaDrMediaInfo</TT> Structurerepresenting media information<P><TT>PMoaDrMediaInfo</TT> Pointerto <TT>MoaDrMediaInfo</TT><P><TT>ConstPMoaDrMediaInfo</TT>Constant pointer to <TT>MoaDrMediaInfo</TT><H4><A NAME="RTFToC47"><FONT face=arial,helvetica,sans-serif>Notification type</FONT></A><FONT face=arial,helvetica,sans-serif></FONT></H4><H5><A NAME="MoaDrNotifyType"><FONT SIZE=2 face=arial,helvetica,sans-serif>MoaDrNotifyType</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif></FONT></H5><P><TT>MoaDrNotifyType</TT> <TT>MoaLong</TT>representing type of notification requested<P>Type representing the type of a notification client. Directordefines one value for this type: <TT>kMoaDrDrNotifyType_DocFileIO.<BR></TT><H4><A NAME="RTFToC49"><FONT face=arial,helvetica,sans-serif>Score access types</FONT></A><FONT face=arial,helvetica,sans-serif></FONT></H4><H5><A NAME="MoaDrFrameIndex"><FONT SIZE=2 face=arial,helvetica,sans-serif>MoaDrFrameIndex</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif>,<BR><A NAME="RTFToC51">PMoaDrFrameIndex</A> </FONT></H5><P><TT>MoaDrFrameIndex</TT> <TT>MoaLong</TT>representing a frame in a score <P><TT>PMoaDrFrameIndex</TT> Pointerto a <TT>MoaDrFrameIndex</TT><H5><A NAME="MoaDrSpriteChanIndex"><FONT SIZE=2 face=arial,helvetica,sans-serif>MoaDrSpriteChanIndex</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif>,<BR>PMoaDrSpriteChanIndex </FONT></H5><P><TT>MoaDrSpriteChanIndex MoaLong</TT>representing the score channel of a sprite <P><TT>PMoaDrSpriteChanIndex</TT>Pointer to a <TT>MoaDrSpriteChanIndex</TT>ofa sprite <H5><A NAME="MoaDrSoundChanIndex"><FONT SIZE=2 face=arial,helvetica,sans-serif>MoaDrSoundChanIndex</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif>,<BR>PMoaDrSoundChanIndex </FONT></H5><P><TT>MoaDrSoundChanIndex</TT><TT>MoaLong</TT> representinga sound channel in a score <P><TT>PMoaDrSoundChanIndex</TT>Pointer to a <TT>MoaDrSoundChanIndex<BR></TT><H4><FONT face=arial,helvetica,sans-serif>Style data type </FONT></H4><H5><A NAME="MoaDrCharStyleData">MoaDrCharStyleData</A><FONT SIZE=2 face=arial,helvetica,sans-serif>,<BR>PMoaDrCharStyleData </FONT></H5><PRE>typedef struct {	MoaMmRGBTriple		fCharForeColor;	MoaDouble		fCharLetterspace;	MoaDouble		fCharLinespace;	MoaShort		fCharSize;	MoaShort 		fCharFont;	MoaDrCharStyle		fCharFace;} MoaDrCharStyleData, FAR * PMoaDrCharStyleData;</FONT></PRE><P>Structure passed to <A HREF="drrtaccs.htm" ><FONT SIZE=2>IMoaDrRTAccess</FONT></A>interface to specify style runs within a string to be renderedin rtf.  It contains the following fields:<BR><TABLE><TR><TD WIDTH=257><CODE>fCharForeColor</CODE> </TD><TD WIDTH=257>RGB text color</TD></TR><TR><TD WIDTH=257><CODE>fCharLetterspace</CODE> </TD><TD WIDTH=257>Character spacing</TD></TR><TR><TD WIDTH=257><CODE>fCharLinespace</CODE> </TD><TD WIDTH=257>Line spacing</TD></TR><TR><TD WIDTH=257><CODE>fCharSize</CODE>  </TD><TD WIDTH=257>Font size</TD></TR><TR><TD WIDTH=257><CODE>fCharFont</CODE>  </TD><TD WIDTH=257>Font style</TD></TR><TR><TD WIDTH=257><CODE>fCharFace</CODE>  </TD><TD WIDTH=257>Font face</TD></TR></TABLE><P><P><CODE>MoaDrCharStyleData</CODE> Style data structure<P><CODE>PMoaDrCharStyleData</CODE> Pointer to style data structure<P><HR width=45% align=left><H3><FONT SIZE=4 face=arial,helvetica,sans-serif><A NAME="DRMACS">Director Macros</A></FONT></H3><P>Defined in: drtypes.h<H4><A NAME="RTFToC58"><FONT face=arial,helvetica,sans-serif>Cast member referenceaccess</FONT></A><FONT face=arial,helvetica,sans-serif> </FONT></H4><H5><A NAME="CMRef_GetMemberIndex"><FONT SIZE=2 face=arial,helvetica,sans-serif>CMRef_GetMemberIndex</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif>()</FONT></H5><P><TT>CMRef_GetMemberIndex(MoaDrCMRef</TT><TT><I>pCMRef</I>)</TT><P><TT><I>pCMRef</I></TT>Pointer to a <TT>MoaDrCMRef</TT>structure<P>Returns the <TT>MoaDrMemberIndex</TT>for the cast member referred to by the cast member reference structure<TT><I>pCMRef</I></TT>. <H5><A NAME="CMRef_GetMovieCastIndex"><FONT SIZE=2 face=arial,helvetica,sans-serif>CMRef_GetMovieCastIndex</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif>()</FONT></H5><P><TT>CMRef_GetMovieCastIndex(MoaDrCMRef</TT><TT><I>pCMRef</I>)</TT><P><TT><I>pCMRef</I></TT>Pointer to a <TT>MoaDrCMRef</TT>structure<P>Returns the <TT>MoaDrCastIndex</TT>for the cast referred to by the cast member reference structure<TT><I>pCMRef</I></TT>. <H5><A NAME="CMRef_Make"><FONT SIZE=2 face=arial,helvetica,sans-serif>CMRef_Make</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif>()</FONT></H5><PRE>CMRef_Make(MoaDrCMRef	pCMRef	,	MoaDrCastIndex 			<I>castInd</I>,	MoaDrMemberIndex <I>memberInd</I>) </PRE><P><TT><I>pCMRef</I></TT>Pointer to a <TT>MoaDrCMRef</TT>structure<P><TT><I>castInd</I>MoaDrCastIndex</TT> value representing the cast <P><TT><I>castInd</I>MoaDrMemberIndex</TT> value representing the cast member<P>Places the cast represented by <TT><I>castInd</I></TT>and cast member represented by <TT><I>castInd</I></TT>in the cast member reference structure <TT><I>pCMRef</I></TT>.<H5><A NAME="CMRef_MakeNull"><FONT SIZE=2 face=arial,helvetica,sans-serif>CMRef_MakeNull</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif>()</FONT></H5><P>CMRef_MakeNull(<TT>MoaDrCMRef</TT><TT><I>pCMRef</I></TT>) <P><TT><I>pCMRef</I></TT>Pointer to the <TT>MoaDrCMRef</TT>structure to clear<P>Clears the fields in the cast member reference structure <TT><I>pCMRef</I></TT>.<H4><A NAME="RTFToC63"><FONT face=arial,helvetica,sans-serif>Scripting Xtra callaccess</FONT></A><FONT face=arial,helvetica,sans-serif> </FONT></H4><H5><A NAME="pciGetArgByIndex"><FONT SIZE=2 face=arial,helvetica,sans-serif>pciGetArgByIndex</FONT></A><FONT SIZE=2 face=arial,helvetica,sans-serif>()</FONT></H5><PRE><TT><FONT SIZE=2>pciGetArgByIndex(PMoaMmCallInfo <I>pCallInfo</I>, </TT>        </FONT><TT>MoaLong <I>argIndex</I>, </TT>        </FONT><TT>MoaMmValue <I>pValue</I>)</TT></PRE><P><TT><I>pCallInfo</I></TT> Pointertype <TT>MoaMmCallInfo</TT>structure<P><TT><I>argIndex</I></TT> <TT>MoaLong</TT>representing argument index<P><TT><I>pValue</I></TT> Pointerto the argument<P>Accesses argument information in the <TT>MoaDrCallInfo</TT>structure <TT><I>pCallInfo</I></TT>.Returns, in <TT><I>pValue</I></TT>,a pointer to the argument specified by <TT><I>argIndex</I></TT>.<P><HR width=45% align=left><H3><FONT SIZE=4 face=arial,helvetica,sans-serif><A NAME="DRCONS">Director Constants</A></FONT></H3><P>Defined in: drtypes.h<H4><A NAME="RTFToC66"><FONT face=arial,helvetica,sans-serif>Cast name lengthconstant</FONT></A><FONT face=arial,helvetica,sans-serif> </FONT></H4><P><TABLE BORDER="2"><TR><TD WIDTH=135>Name </TD><TD WIDTH=369>Description</TD></TR><TR><TD WIDTH=135><TT>kMoaDrMaxCastName</TT> </TD><TD WIDTH=369>Maximum length of cast name in bytes (255)</TD></TR></TABLE><H4><A NAME="RTFToC67"><FONT face=arial,helvetica,sans-serif>Image media optionconstants</FONT></A><FONT face=arial,helvetica,sans-serif> </FONT></H4><P><TABLE BORDERCOLOR=#808080 BORDER=2><TR><TD WIDTH=273><B>Name</B></TD><TD WIDTH=231><B>Description</B></TD></TR><TR><TD WIDTH=273><TT>kMoaDrMediaOpts_None</TT></TD><TD WIDTH=231>Normal case when setting, getting, and attaching</TD></TR><TR><TD WIDTH=273><TT>kMoaDrImgMediaOpts_AuthorDefined</TT></TD><TD WIDTH=231>Assign pixel depth and palette for cast member based on author's preferences. In Director 5.0, this is currently the stage window screen's current pixel depth and palette. Supplied image data is remapped to this pixel depth and pale tte when placed in the cast member. This option is the default. </TD></TR><TR><TD WIDTH=273><TT>kMoaDrImgMediaOpts_CastMemDepthAndPal</TT></TD><TD WIDTH=231>Use the cast member's existing pixel depth and palette. Supplied image data is remapped to this pixel depth &amp; palette when placed in the cast member. If there is no image data for the cast member yet, this option is equivalent t o <TT>kMoaDrImgMediaOpts_AuthorDefined</TT></TD></TR><TR><TD WIDTH=273><TT>kMoaDrImgMediaOpts_ScreenDepthAndPal</TT></TD><TD WIDTH=231>Use the stage window screen's current pixel depth and palette. Supplied image data is remapped to this pixel depth &amp; palette when placed in the cast member.</TD></TR><TR><TD WIDTH=273><TT>kMoaDrImgMediaOpts_Dialog</TT></TD><TD WIDTH=231>Available in authoring application only. Invoke a dialog asking the user whether to use the image's current pixel depth or the screen's. Also, if it's an indexed image, user has the option of remapping to another existing palette. I f pixel depth is being reduced or a new palette is requested, the user can choose whether remapping or dithering should take place.</TD></TR><TR><TD WIDTH=273><TT>kMoaDrImgMediaOpts_AuxInfo</TT></TD><TD WIDTH=231>Explicitly specifies pixel depth, palette, and dither/remap option. If set, the <TT>&quot;aux&quot; </TT>field must be a pointer to a caller-owned <TT>MoaDrImageAuxInfo /FONT&gt;structure. See DRTYPES.H. </TT></TD></TR><TR><TD WIDTH=273><TT>kMoaDrImgMediaOpts_ImageDepthAndPal</TT></TD><TD WIDTH=231>Use the supplied image's pixel depth and palette; don't do any remapping. If it has a palette (it's an indexed image) and the palette doesn't exist in the current movie's cast(s), a new palette cast member is created automatically c ontaining the image's palette, and is assigned to the bitmap cast member.</TD></TR></TABLE><P><HR width=45% align=left><H3><FONT SIZE=4 face=arial,helvetica,sans-serif><A NAME="DRNIDS">Director Notification IDs</A></FONT></H3><P>Defined in: driservc.h<P><TABLE ><TR><TD WIDTH=252>Notification ID</TD><TD WIDTH=252>Description</TD></TR><TR><TD WIDTH=252>NID_DrNCastMemberModified</TD><TD WIDTH=252></TD></TR><TR><TD WIDTH=252>NID_DrNCastSelectionChanged</TD><TD WIDTH=252></TD></TR><TR><TD WIDTH=252>NID_DrNScoreModified</TD><TD WIDTH=252></TD></TR><TR><TD WIDTH=252>NID_DrNScoreSelectionChanged</TD><TD WIDTH=252></TD></TR><TR><TD WIDTH=252>NID_DrNCuePointPassed</TD><TD WIDTH=252></TD></TR></TABLE><P>Notification events are sent to Xtras that implement the <A HREF="../moref/montfcln.htm">IMoaNotificationClient</A>interface and that subscribe to specific events through the <A HREF="../moref/montfctn.htm">IMoaNotification</A>callback interface. <BR><P><HR width=45% align=left><H3><FONT SIZE=4 face=arial,helvetica,sans-serif><A NAME="DRERRS">Director Error Codes</A></FONT></H3><P>Defined in: drtypes.h<H4><FONT face=arial,helvetica,sans-serif>Base error</FONT></H4><P><TT>kMoaDrErr_Base</TT> Basevalue of Director error codes<H4><A NAME="RTFToC73"><FONT face=arial,helvetica,sans-serif>Media access errors</FONT></A><FONT face=arial,helvetica,sans-serif></FONT></H4><PRE><TT><FONT SIZE=2>kMoaDrErr_PictureExpectedkMoaDrErr_MediaLabelNotSupportedkMoaDrErr_MediaFormatNotSupported</TT> </FONT><TT>kMoaDrErr_MediaInUsekMoaDrErr_MediaDataInvalidkMoaDrErr_MediaDataNonexistent</TT> </FONT><TT>kMoaDrErr_LabelNotFound</TT></PRE><H4><A NAME="RTFToC74"><FONT face=arial,helvetica,sans-serif>Property accesserrors</FONT></A><FONT face=arial,helvetica,sans-serif> </FONT></H4><P><TT>kMoaDrErr_CastMemberExpected<BR>kMoaDrErr_MediaExpected</TT> <BR><H4><A NAME="RTFToC75"><FONT face=arial,helvetica,sans-serif>Score access errors</FONT></A><FONT face=arial,helvetica,sans-serif></FONT></H4><P><TT>kMoaDrErr_NotInUpdateMode</TT><BR><TT>kMoaDrErr_OwnerNotSet<BR></TT><H4><A NAME="RTFToC77"><FONT face=arial,helvetica,sans-serif>Miscellaneous error</FONT></A><FONT face=arial,helvetica,sans-serif>s</FONT></H4><P><TABLE BORDER="2"><TR><TD WIDTH=201><TT>kMoaDrErr_CastNotFound</TT> </TD><TD WIDTH=303>Returned by cast accessor methods to indicate specified cast not found</TD></TR><TR><TD WIDTH=201><TT>kMoaDrErr_CastMemNotFound</TT> </TD><TD WIDTH=303>Returned by cast member accessor methods to indicate specified cast member not found</TD></TR><TR><TD WIDTH=201><TT>kMoaDrErr_DiskIO</TT> </TD><TD WIDTH=303>Disk input/output error</TD></TR><TR><TD WIDTH=201><TT>kMoaDrErr_FrameNotFound</TT> </TD><TD WIDTH=303></TD></TR><TR><TD WIDTH=201><TT>kMoaDrErr_NotifyTypeUnknown</TT></TD><TD WIDTH=303></TD></TR></TABLE><HR width=45% align=left><P><A HREF="../copyrite.htm">Copyright &#169; 1995, 1996, 1997 Macromedia, Inc.</A><!--#include virtual="/uber/html/footer.html" --></BODY></HTML>