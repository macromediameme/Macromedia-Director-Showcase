<HTML><HEAD><TITLE>IMoaDrUtils</TITLE><META NAME="GENERATOR" CONTENT="Internet Assistant for Microsoft Word 2.0z"></HEAD><body bgcolor="#FFFFFF"  link="#ff3300" alink="#ff3300" vlink="#333399"><A HREF = "../drdg/index.htm">DR Developer's Guide</A><BR><A HREF = "index.htm"> DR Interfaces</A> | <A HREF = "drmthndx.htm">DR Methods</A> | <A HREF = "drtypndx.htm">DR Types and Misc API</A><hr width=45% align=left><h2><font face=arial,helvetica,sans-serif>IMoaDrUtils</font></h2><hr width=45% align=left><P>Interface ID: <CODE>IID_IMoaDrUtils<BR></CODE>Pointer type: <CODE>PIMoaDrUtils<BR></CODE>Inheritance: <A HREF = "../moref/unknown.htm"><CODE>IMoaUnknown</CODE></A><BR>Header file: <A HREF = "../../include/driservc.h">driservc.h</A><BR><h3><font face=arial,helvetica,sans-serif>Description</font></h3><DL><DT><DD>This interface provides Director-specific utilities. It complementsthe features of the <TT>IMoaMmUtils</TT>interface, providing application-specific services to Xtras.<BR></DL><P><h3><font face=arial,helvetica,sans-serif>Methods</font></h3><DL><DT><DD></DL><h4><font face=arial,helvetica,sans-serif>Data conversion </font></h4><DL><DT><DD><A HREF = "#ValueToCMRef">ValueToCMRef()</A> <BR><A HREF = "#CMRefToValue">CMRefToValue()</A> </DL><h4><font face=arial,helvetica,sans-serif>Media management </font></h4><DL><DT><DD><A HREF = "#NewMediaInfo">NewMediaInfo()</A> <BR><A HREF = "#MediaRelease">MediaRelease()</A> </DL><h4><font face=arial,helvetica,sans-serif>Acquiring IMoaDrScoreAccess </font></h4><DL><DT><DD><A HREF = "#NewScoreAccess">NewScoreAccess()</A> </DL><h4><font face=arial,helvetica,sans-serif>Managing notification clients </font></h4><DL><DT><DD><A HREF = "#RegisterNotificationClient">RegisterNotificationClient()</A><BR><A HREF = "#UnregisterNotificationClient">UnregisterNotificationClient()</A></DL><hr width=45% align=left><h3><font face=arial,helvetica,sans-serif><A NAME="CMRefToValue">CMRefToValue()</A></font></h3><h4><font face=arial,helvetica,sans-serif>Syntax</font></h4><DL><CODE><DT>CMRefToValue(PIMoaDrUtils<I>This</I>, <DD>ConstPMoaDrCMRef<I>pCMRef</I>, <BR>PMoaMmValue<I>pValue</I>)</CODE></DL><h4><font face=arial,helvetica,sans-serif>Parameters</font></h4><DL><DT><DD><DT><CODE><I>This</I></CODE><DD>Pointer to the <CODE>IMoaDrUtils</CODE> interface<BR><BR><DT><CODE><I>pCMRef</I></CODE><DD><CODE>ConstPMoaDrCMRef</CODE>Pointer to a <TT>ConstPMoaDrCMRef</TT>to be used as the basis for the new value <BR><BR><DT><CODE><I>pValue</I></CODE><DD><CODE>PMoaMmValue</CODE>Pointer to <TT>MoaMmValue</TT>to receive the result <BR><BR></DL><h4><font face=arial,helvetica,sans-serif>Returns</font></h4><DL><DT><DD><CODE>MoaError</CODE></DL><h4><font face=arial,helvetica,sans-serif>Description</font></h4><DL><DT><DD>This method has been superseded by methods of the <A HREF="drvalue.htm"><CODE>IMoaDrValue</CODE></A> interface<BR><BR></DL><P><hr width=45% align=left><h3><font face=arial,helvetica,sans-serif><A NAME="MediaRelease">MediaRelease()</A></font></h3><h4><font face=arial,helvetica,sans-serif>Syntax</font></h4><DL><CODE><DT>MediaRelease(PIMoaDrUtils<I>This</I>, <DD>PMoaDrMediaInfo<I>pMediaInfo</I>)</CODE></DL><h4><font face=arial,helvetica,sans-serif>Parameters</font></h4><DL><DT><DD><DT><CODE><I>This</I></CODE><DD>Pointer to the <CODE>IMoaDrUtils</CODE> interface<BR><BR><DT><CODE><I>pMediaInfo</I></CODE><DD>PMoaDrMediaInfo<BR><BR></DL><h4><font face=arial,helvetica,sans-serif>Returns</font></h4><DL><DT><DD><CODE>MoaError</CODE></DL><h4><font face=arial,helvetica,sans-serif>Description</font></h4><DL><DT><DD>Releases the bulk media data referenced by the <TT>MoaDrMediaInfo</TT>structure in <TT><I>pMediaInfo</I></TT><I>.</I>The <TT>formatSymbol </TT>and<TT>mediaData </TT>fields of<TT>pMediaInfo </TT>must bevalid on entry. If the format of the media data is unknown tothe host application, <TT>kMoaDrErr_MediaFormatNotSupported</TT>is returned and the media data is not be released.You can also release the data yourself using the appropriate nativememory manager call (if the media data is a native data type),such as <TT>KillPicture() </TT>for&quot;<TT>macPICT</TT>&quot;.The host application does not guarantee that it can dispose mediadata of all formats; only those that are built-in data types ofthe host application are supported by this call. <BR></DL><P><hr width=45% align=left><h3><font face=arial,helvetica,sans-serif><A NAME="NewMediaInfo">NewMediaInfo()</A></font></h3><h4><font face=arial,helvetica,sans-serif>Syntax</font></h4><DL><CODE><DT>NewMediaInfo(PIMoaDrUtils<I>This</I>, <DD>MoaMmSymbol<I>labelSymbol</I>, <BR>MoaMmSymbol<I>formatSymbol</I>, <BR>PMoaVoid<I>mediaData</I>, <BR>MoaLong<I>options</I>, <BR>PMoaVoid<I>aux</I>, <BR>PMoaDrMediaInfo<I>pMediaInfo</I>)</CODE></DL><h4><font face=arial,helvetica,sans-serif>Parameters</font></h4><DL><DT><DD><DT><CODE><I>This</I></CODE><DD>Pointer to the <CODE>IMoaDrUtils</CODE> interface<BR><BR><DT><CODE><I>labelSymbol</I></CODE><DD>MoaMmSymbol<BR><BR><DT><CODE><I>formatSymbol</I></CODE><DD>MoaMmSymbol<BR><BR><DT><CODE><I>mediaData</I></CODE><DD>PMoaVoid<BR><BR><DT><CODE><I>options</I></CODE><DD><CODE>MoaLong</CODE>Used when setting image media. Use a <TT>kMoaDrImgMediaOpts_</TT>constant <BR><BR><DT><CODE><I>aux</I></CODE><DD><CODE>PMoaVoid</CODE>Pointer to a <TT>MoaDrImageAuxInfo</TT>structure if you use the &quot;AuxInfo&quot; option <BR><BR><DT><CODE><I>pMediaInfo</I></CODE><DD>PMoaDrMediaInfo<BR><BR></DL><h4><font face=arial,helvetica,sans-serif>Returns</font></h4><DL><DT><DD><CODE>MoaError</CODE></DL><h4><font face=arial,helvetica,sans-serif>Description</font></h4><DL><DT><DD><BR>Populates a <TT>MoaDrMediaInfo </TT>structure.This call does not allocate any media data, it simply populatesthe supplied structure. If populating the structure for a callto <TT>SetMedia()</TT>, youmust populate the <TT><I>labelSymbol</I></TT>,<TT><I>formatSymbol</I></TT>,<TT><I>mediaData </I></TT>,<TT><I>options</I></TT> , and<TT><I>aux </I></TT>fieldsaccordingly. <TT><I>options </I></TT>tellsDirector how the palette and color depth of the image should beset; it currently varies only for &quot;image&quot; label media.<TT><I>aux </I></TT>is usedonly when specifying <TT>AuxInfo </TT>options;it is ignored for other options. If populating the structure fora call to <TT>GetMedia()</TT>,only the <TT><I>labelSymbol </I></TT>and<TT><I>formatSymbol </I></TT>fieldsare required.<BR><BR>Before a <TT>GetMedia()</TT>,<TT>SetMedia()</TT>, or <TT>AttachMedia()</TT>call, use this method to fill out the supplied structure, specifyingNULL for the <TT>aux </TT>field.Using this call forces you to fill out all the needed parameters.<BR><BR>When setting or getting any media label other than &quot;image&quot;,use the value <TT>kMoaDrMediaOpts_None</TT>for the <TT><I>options</I></TT>argument. When setting or attaching an &quot;image&quot;media label type, there are a number of image media constantsto use as the <TT><I>options</I></TT>argument. These are described in the &quot;Constants&quot; sectionlater in this document. <BR><BR></DL><P><hr width=45% align=left><h3><font face=arial,helvetica,sans-serif><A NAME="NewScoreAccess">NewScoreAccess()</A></font></h3><h4><font face=arial,helvetica,sans-serif>Syntax</font></h4><DL><CODE><DT>NewScoreAccess(PIMoaDrUtils<I>This</I>, <DD>PIMoaDrScoreAccess FAR *<I>ppScore</I>)</CODE></DL><h4><font face=arial,helvetica,sans-serif>Parameters</font></h4><DL><DT><DD><DT><CODE><I>This</I></CODE><DD>Pointer to the <CODE>IMoaDrUtils</CODE> interface<BR><BR><DT><CODE><I>ppScore</I></CODE><DD>PIMoaDrScoreAccess FAR *<BR><BR></DL><h4><font face=arial,helvetica,sans-serif>Returns</font></h4><DL><DT><DD><CODE>MoaError</CODE></DL><h4><font face=arial,helvetica,sans-serif>Description</font></h4><DL><DT><DD>Creates a new instance of an object supporting <TT>IMoaDrScoreAccess</TT>.The <TT>IMoaDrScoreAccess</TT>interface is used to access and edit score data for movies andfilm loops. Normally, if you want to access an existing movieor film loop, you would call <TT>IMoaDrMovie::GetScoreAccess()</TT>or <TT>IMoaDrCastMem::GetScoreAccess()</TT>.However, if you do not want to create new score from scratch whichis not yet associated with a movie or film loop, this method canbe used. To save the resulting score, you must call the <TT>IMoaDrScoreAccess::SetOwner()</TT>method to associate an owner object with the score,and then call <TT>Commit() </TT>tosave the score to the object <BR></DL><P><hr width=45% align=left><h3><font face=arial,helvetica,sans-serif><A NAME="RegisterNotificationClient">RegisterNotificationClient()</A></font></h3><h4><font face=arial,helvetica,sans-serif>Syntax</font></h4><DL><CODE><DT>RegisterNotificationClient(PIMoaDrUtils<I>This</I>, <DD>PIMoaDrNotificationClient<I>pNotificationClient</I>, <BR>MoaDrNotifyType<I>notifyType</I>, <BR>PMoaVoid<I>refCon</I>)</CODE></DL><h4><font face=arial,helvetica,sans-serif>Parameters</font></h4><DL><DT><DD><DT><CODE><I>This</I></CODE><DD>Pointer to the <CODE>IMoaDrUtils</CODE> interface<BR><BR><DT><CODE><I>pNotificationClient</I></CODE><DD><CODE>PIMoaDrNotificationClient</CODE>Pointer to a pre-existing<TT>IMoaDrNotificationClient</TT>interface <BR><BR><DT><CODE><I>notifyType</I></CODE><DD><CODE>MoaDrNotifyType</CODE>Value indicating the type of notificationrequested <BR><BR><DT><CODE><I>refCon</I></CODE><DD>PMoaVoid<BR><BR></DL><h4><font face=arial,helvetica,sans-serif>Returns</font></h4><DL><DT><DD><CODE>MoaError</CODE></DL><h4><font face=arial,helvetica,sans-serif>Description</font></h4><DL><DT><DD>This method has been superseded by methods of the <A HREF="../moref/montfctn.htm"><CODE>IMoaNotification</CODE></A> interface.<BR><BR></DL><P><hr width=45% align=left><h3><font face=arial,helvetica,sans-serif><A NAME="UnregisterNotificationClient">UnregisterNotificationClient()</A></font></h3><h4><font face=arial,helvetica,sans-serif>Syntax</font></h4><DL><CODE><DT>UnregisterNotificationClient(PIMoaDrUtils<I>This</I>, <DD>PIMoaDrNotificationClient<I>pNotificationClient</I>, <BR>MoaDrNotifyType<I>notifyType</I>, <BR>PMoaVoid<I>refCon</I>)</CODE></DL><h4><font face=arial,helvetica,sans-serif>Parameters</font></h4><DL><DT><DD><DT><CODE><I>This</I></CODE><DD>Pointer to the <CODE>IMoaDrUtils</CODE> interface<BR><BR><DT><CODE><I>pNotificationClient</I></CODE><DD><CODE>PIMoaDrNotificationClient</CODE>Pointer to a pre-existing<TT>IMoaDrNotificationClient</TT>interface <BR><BR><DT><CODE><I>notifyType</I></CODE><DD><CODE>MoaDrNotifyType</CODE>Value indicating the type of notificationrequested <BR><BR><DT><CODE><I>refCon</I></CODE><DD>PMoaVoid<BR><BR></DL><h4><font face=arial,helvetica,sans-serif>Returns</font></h4><DL><DT><DD><CODE>MoaError</CODE></DL><h4><font face=arial,helvetica,sans-serif>Description</font></h4><DL><DT><DD>This method has been superseded by methods of the <A HREF="../moref/montfctn.htm"><CODE>IMoaNotification</CODE></A> interface.<BR><BR></DL><P><hr width=45% align=left><h3><font face=arial,helvetica,sans-serif><A NAME="ValueToCMRef">ValueToCMRef()</A></font></h3><h4><font face=arial,helvetica,sans-serif>Syntax</font></h4><DL><CODE><DT>ValueToCMRef(PIMoaDrUtils<I>This</I>, <DD><BR>ConstPMoaMmValue<I>pValue</I>, <BR>PMoaDrCMRef<I>pCMRef</I>)</CODE></DL><h4><font face=arial,helvetica,sans-serif>Parameters</font></h4><DL><DT><DD><DT><CODE><I>This</I></CODE><DD>Pointer to the <CODE>IMoaDrUtils</CODE> interface<BR><BR><DT><CODE><I>pValue</I></CODE><DD><CODE>ConstPMoaMmValue</CODE>Pointer to a cast member referencetype <BR><BR><DT><CODE><I>pCMRef</I></CODE><DD><CODE>PMoaDrCMRef</CODE>Pointer to a MoaDrCMRef to receivethe result <BR><BR></DL><h4><font face=arial,helvetica,sans-serif>Returns</font></h4><DL><DT><DD><TABLE BORDER="2"><TR><TD ALIGN="LEFT" VALIGN="TOP" WIDTH=216><TT>kMoaErr_NoErr</TT> </TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH=288>successful</TD></TR><TR><TD ALIGN="LEFT" VALIGN="TOP" WIDTH=216><TT>kMoaDrErr_CastMemberExpected</TT> </TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH=288>Type mismatch: <TT>CMRef</TT> expected </TD></TR></TABLE></DL><P><h4><font face=arial,helvetica,sans-serif>Description</font></h4><DL><DT><DD><BR>This method has been superseded by methods of the <A HREF="drvalue.htm"><CODE>IMoaDrValue</CODE></A> interface<BR><BR></DL><P><hr width=45% align=left><P><A HREF = "../copyrite.htm"> Copyright(c) 1995, 1996, 1997, 1998, 1999 Macromedia, Inc.</A></BODY><!--#include virtual="/uber/html/footer.html" --></html>