<HTML><HEAD><TITLE>MUI Types and Miscellaneous API</TITLE><META NAME="GENERATOR" CONTENT="Internet Assistant for Microsoft Word 2.0"></HEAD><BODY bgcolor="#FFFFFF"  link="#ff3300" alink="#ff3300" vlink="#333399"><P><A HREF="../mudg/index.htm" >MUI Developer's Guide</A><BR><A HREF="index.htm" >MUI Interfaces</A> | <A HREF="mumthndx.htm" >MUI Methods</A><HR width=45% align=left><H3><A NAME="RTFToC2"><FONT SIZE=4 face=arial,helvetica,sans-serif>Director 7 Xtra Development Kit: MUI API Reference</FONT></A></H3><H2><FONT SIZE=5 face=arial,helvetica,sans-serif>MUI Types and Miscellaneous API</FONT></H2><HR width=45% align=left><P>This document contains the following sections:<UL><LI><A HREF = "#MUTYPES">MUI Types</A><LI><A HREF = "#MUCONSTS">MUI Constants</A><LI><A HREF = "#MUERRS">MUI Errors</A></UL><HR width=45% align=left><H3><FONT SIZE=4 face=arial,helvetica,sans-serif><A NAME="MUTYPES">MUI Types</A></FONT></H3><H4><A NAME="TMuiAlertButtonType"><FONT FACE="Arial">TMuiAlertButtonType</FONT></A></H4><P>Defined in: muiinit.t<P><CODE>typedef MoaLong TMuiAlertButtonType</CODE><P>Passed to <A HREF="mualert.htm#Alert">IMuiAlert::Alert()</A>,specifies the buttons in an alert. The following constants definethe button types:<P><TABLE BORDER=2><TR><TD WIDTH=208><B>Constant</B></TD><TD WIDTH=296><B>Buttons</B></TD></TR><TR><TD WIDTH=208><CODE>kMuiAlertButtons_Ok </CODE></TD><TD WIDTH=296>1: OK</TD></TR><TR><TD WIDTH=208><CODE>kMuiAlertButtons_OkCancel</CODE></TD><TD WIDTH=296>2: OK, Cancel</TD></TR><TR><TD WIDTH=208><CODE>kMuiAlertButtons_AbortRetryIgnore</CODE></TD><TD WIDTH=296>3: Abort, Retry, Ignore</TD></TR><TR><TD WIDTH=208><CODE>kMuiAlertButtons_YesNoCancel</CODE></TD><TD WIDTH=296>3: Yes, No, Cancel</TD></TR><TR><TD WIDTH=208><CODE>kMuiAlertButtons_YesNo</CODE></TD><TD WIDTH=296>2: Yes, No</TD></TR><TR><TD WIDTH=208><CODE>kMuiAlertButtons_RetryCancel</CODE></TD><TD WIDTH=296>2: Retry, Cancel</TD></TR></TABLE><P><BR><H4><A NAME="TMuiAlertIcon"><FONT FACE="Arial">TMuiAlertIcon</FONT></A></H4><P>Defined in: muiinit.t<P><CODE>typedef MoaLong TMuiAlertIcon</CODE><P>Passed to <A HREF="mualert.htm#Alert">IMuiAlert::Alert()</A>,specifies the icon in an alert box. The following constants definethe alert icons:<P><TABLE BORDER=2><TR><TD WIDTH=252>kMuiAlertIcon_None</TD><TD WIDTH=252></TD></TR><TR><TD WIDTH=252>kMuiAlertIcon_Stop</TD><TD WIDTH=252></TD></TR><TR><TD WIDTH=252>kMuiAlertIcon_Note</TD><TD WIDTH=252></TD></TR><TR><TD WIDTH=252>kMuiAlertIcon_Caution</TD><TD WIDTH=252></TD></TR><TR><TD WIDTH=252>kMuiAlertIcon_Question</TD><TD WIDTH=252></TD></TR><TR><TD WIDTH=252>kMuiAlertIcon_Error</TD><TD WIDTH=252></TD></TR></TABLE><P><BR><H4><A NAME="TMuiDialogEvent"><FONT FACE="Arial">TMuiDialogEvent</FONT></A></H4><P>Defined in: mui.h<P><CODE>typedef MoaLong TMuiDialogEvent</CODE><P>Value passed to <A HREF="../moref/montfcln.htm"><FONT SIZE=2>IMoaNotificationClient::Notify()</FONT></A>to enable event handling for a dialog box. The following constantsdefine the types of events:<P><TABLE BORDER=2><TR><TD WIDTH=173><B>Constant</B></TD><TD WIDTH=166><CODE><B><FONT SIZE=2 FACE="Courier">itemHit</FONT></B></CODE><B> </B></TD><TD WIDTH=166><B>Data in refCon</B></TD></TR><TR><TD WIDTH=173><CODE>kMuiDialogItemChanged</CODE></TD><TD WIDTH=166>item changed</TD><TD WIDTH=166>-</TD></TR><TR><TD WIDTH=173><CODE>kMuiDialogItemClicked</CODE></TD><TD WIDTH=166>item clicked</TD><TD WIDTH=166>-</TD></TR><TR><TD WIDTH=173><CODE>kMuiDialogWindowOpening</CODE></TD><TD WIDTH=166>-</TD><TD WIDTH=166>-</TD></TR><TR><TD WIDTH=173><CODE>kMuiDialogWindowClosed</CODE></TD><TD WIDTH=166>-</TD><TD WIDTH=166>-</TD></TR><TR><TD WIDTH=173><CODE>kMuiDialogWindowResize</CODE></TD><TD WIDTH=166>-</TD><TD WIDTH=166>PMoaRect</TD></TR><TR><TD WIDTH=173><CODE>kMuiDialogWindowZoom</CODE></TD><TD WIDTH=166>-</TD><TD WIDTH=166>PMoaRect</TD></TR><TR><TD WIDTH=173><CODE>kMuiDialogItemEnteringFocus</CODE></TD><TD WIDTH=166>item about to get focus</TD><TD WIDTH=166>-</TD></TR><TR><TD WIDTH=173><CODE>kMuiDialogItemLosingFocus</CODE></TD><TD WIDTH=166>item about to lose focus</TD><TD WIDTH=166>-</TD></TR></TABLE><P><BR><H4><A NAME="TMuiEventRecord"><FONT FACE="Arial">TMuiEventRecord</FONT></A></H4><P>Defined in: mui.h<PRE><FONT SIZE=2>typedef struct{        MoaLong                 itemHit;        TMuiDialogEvent         event;        PIMuiDialog             pDialog;        MoaLong                 reserved;} TMuiEventRecord;</FONT></PRE><P>Structure passed by a dialog to the <A HREF="../moref/montfcln.htm#Notify"><FONT SIZE=2>IMoaNotificationClient::Notify()</FONT></A>method to communicate user events to an Xtra. <BR><BR><BR><H4><A NAME="TMuiItem"><FONT FACE="Arial">TMuiItem</FONT></A></H4><P>Defined in: muiinit.t<BR><PRE><FONT SIZE=2>typedef struct{        MoaLong                 iStructSize;        MoaMmValue              vValue;        TMuiWidgetType          iType;          MoaMmValue              vAttributeList;         ConstPMoaChar           pTitle;         ConstPMoaChar           pToolTip;        MoaLong                 iXPosition;             MoaLong                 iYPosition;        MoaLong                 iWidth;         MoaLong                 iHeight;        MoaBool                 bEnabled;} TMuiItem, FAR * PTMuiItem;</FONT></PRE><P>Structure passed in an array to <A HREF="mudialog.htm#Initialize">IMuiDialog::Initialize()</A>to indicate parameters of the widgets to be created. Fields inthe structure are used as follows: <P><TABLE BORDER=2><TR><TD WIDTH=95><B>Field</B></TD><TD WIDTH=95><B>Type</B></TD><TD WIDTH=314><B>Description</B></TD></TR><TR><TD WIDTH=95><CODE>iStructSize</CODE></TD><TD WIDTH=95><CODE>MoaLong</CODE></TD><TD WIDTH=314>Determine version of struct, = sizeof(TMuiWindow) </TD></TR><TR><TD WIDTH=95><CODE>vValue</CODE></TD><TD WIDTH=95><CODE>MoaMmValue</CODE></TD><TD WIDTH=314>initial value/data to be modified</TD></TR><TR><TD WIDTH=95><CODE>iType</CODE></TD><TD WIDTH=95><CODE>TMuiWidgetType</CODE></TD><TD WIDTH=314>contextual: if data driven, a widget TIMui_WidgetType; if DU driven, a widget TIMui_WidgetType; if Pixel driven, a widget TIMui_WidgetType; if resource driven, a resource ID</TD></TR><TR><TD WIDTH=95><CODE>vAttributeList</CODE></TD><TD WIDTH=95><CODE>MoaMmValue</CODE></TD><TD WIDTH=314>contextual: if enum list of valid values; if int/float list with min 1st, and optionally, max 2nd; if a label, a list with #center, #right, and #left for justification.</TD></TR><TR><TD WIDTH=95><CODE>pTitle</CODE></TD><TD WIDTH=95><CODE>ConstPMoaChar</CODE></TD><TD WIDTH=314>widget title, NULL no title</TD></TR><TR><TD WIDTH=95><CODE>pToolTip</CODE></TD><TD WIDTH=95><CODE>ConstPMoaChar</CODE></TD><TD WIDTH=314>string with tool tip to display when floating over, NULL = not tip</TD></TR><TR><TD WIDTH=95><CODE>iXPosition</CODE></TD><TD WIDTH=95><CODE>MoaLong</CODE></TD><TD WIDTH=314>position of upper left of item, from upper left of dialog</TD></TR><TR><TD WIDTH=95><CODE>iYPosition</CODE></TD><TD WIDTH=95><CODE>MoaLong</CODE></TD><TD WIDTH=314>position of upper left of item, from upper left of dialog</TD></TR><TR><TD WIDTH=95><CODE>iWidth</CODE></TD><TD WIDTH=95><CODE>MoaLong</CODE></TD><TD WIDTH=314>pixel width of item, NULL = automatic</TD></TR><TR><TD WIDTH=95><CODE>iHeight</CODE></TD><TD WIDTH=95><CODE>MoaLong</CODE></TD><TD WIDTH=314>pixel height of item, NULL = automatic</TD></TR><TR><TD WIDTH=95><CODE>bEnabled</CODE></TD><TD WIDTH=95><CODE>MoaBool</CODE></TD><TD WIDTH=314>the UI information related to value</TD></TR></TABLE><P><BR><H4><FONT FACE="Arial">TMuiLayoutType</FONT></H4><P>Defined in: muiinit.t<P><CODE>typedef MoaLong TMuiLayoutType;</CODE><P>Field of the <A HREF="#TMuiWindow"><FONT SIZE=2>TMuiWindow</FONT></A>structure, specifies the layout type of a dialog window. <P><TABLE BORDER=2><TR><TD WIDTH=137><CODE>kMuiLayout_Dynamic</CODE></TD><TD WIDTH=367>Layout provided automatically, use <A HREF="#TMuiWidgetTypes">TMuiWidgetTypes</A> to specify layout groupings</TD></TR><TR><TD WIDTH=137><CODE>kMuiLayout_DialogUnit</CODE></TD><TD WIDTH=367>Layout coordinates defined in dialog units</TD></TR><TR><TD WIDTH=137><CODE>kMuiLayout_Pixel</CODE></TD><TD WIDTH=367>Layout coordinates defined in pixel units</TD></TR><TR><TD WIDTH=137><CODE>kMuiLayout_Resource</CODE></TD><TD WIDTH=367>Layout provided by resource</TD></TR></TABLE><H4><A NAME="TMuiWidgetTypes"><FONT FACE="Arial">TMuiWidgetType</FONT></A></H4><P>Defined in: muiinit.t<P><CODE>typedef MoaLong TMuiWidgetType</CODE><P>Field of the <A HREF="#TMuiItem"><FONT SIZE=2>TMuiItem</FONT></A>structure, used to specify the type of items displayed in a dialogbox. The following values are defined for the widget type: <P><TABLE BORDER=2><TR><TD WIDTH=248><B>Widget type</B></TD><TD WIDTH=62><B>Title</B></TD><TD WIDTH=195><B>Attributes </B></TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_None</CODE></TD><TD WIDTH=62>No</TD><TD WIDTH=195>none</TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_Void_VDivider</CODE></TD><TD WIDTH=62>No</TD><TD WIDTH=195>none</TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_Void_HDivider</CODE></TD><TD WIDTH=62>No</TD><TD WIDTH=195>none</TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_Bitmap</CODE></TD><TD WIDTH=62>No</TD><TD WIDTH=195>&lt;bitmapStyle&gt;</TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_Actor</CODE></TD><TD WIDTH=62>?</TD><TD WIDTH=195>?</TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_Boolean_Checkbox</CODE></TD><TD WIDTH=62>Yes</TD><TD WIDTH=195>&lt;textSize&gt;</TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_Boolean_RadioButton</CODE></TD><TD WIDTH=62>Yes</TD><TD WIDTH=195>&lt;textSize&gt;</TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_Enum_PopupList</CODE></TD><TD WIDTH=62>No</TD><TD WIDTH=195>&lt;popupStyle&gt;&lt;valueList&gt;</TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_Char_EditText</CODE></TD><TD WIDTH=62>No</TD><TD WIDTH=195>&lt;textSize&gt;&lt;justification&gt;&lt;editStyle&gt;</TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_Label_Normal</CODE></TD><TD WIDTH=62>No</TD><TD WIDTH=195>&lt;textSize&gt;&lt;justification&gt;&lt;editStyle&gt;</TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_Long_HSlider</CODE></TD><TD WIDTH=62>No</TD><TD WIDTH=195>&lt;sliderStyle&gt;&lt;valueRange&gt;</TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_Float_HSlider</CODE></TD><TD WIDTH=62>No</TD><TD WIDTH=195>&lt;sliderStyle&gt;&lt;valueRange&gt;</TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_Button_DefaultPushButton</CODE></TD><TD WIDTH=62>Yes</TD><TD WIDTH=195>&lt;textSize&gt;</TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_Button_PushButton</CODE></TD><TD WIDTH=62>Yes</TD><TD WIDTH=195>&lt;textSize&gt;</TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_Button_CancelButton</CODE></TD><TD WIDTH=62>Yes</TD><TD WIDTH=195>&lt;textSize&gt;</TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_Button_Toggle</CODE></TD><TD WIDTH=62>Yes</TD><TD WIDTH=195>&lt;textSize&gt;</TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_RGB_ColorPicker</CODE></TD><TD WIDTH=62></TD><TD WIDTH=195>none</TD></TR><TR><TD WIDTH=248><CODE>kMuiWidgetType_Index_ColorPicker</CODE></TD><TD WIDTH=62></TD><TD WIDTH=195>none</TD></TR></TABLE><P><TABLE BORDER=2><TR><TD WIDTH=203><B>Layout grouping type</B></TD><TD WIDTH=301><B>Purpose</B></TD></TR><TR><TD WIDTH=203><CODE>kMuiWidgetType_Group_WindowBegin</CODE></TD><TD WIDTH=301>First entry in the <CODE>pInputStructArray</CODE></TD></TR><TR><TD WIDTH=203><CODE>kMuiWidgetType_Group_WindowEnd</CODE></TD><TD WIDTH=301>Last entry in the <CODE>pInputStructArray</CODE></TD></TR><TR><TD WIDTH=203><CODE>kMuiWidgetType_Group_HBegin</CODE></TD><TD WIDTH=301>Entry preceding a group of widgets arranged horizontally</TD></TR><TR><TD WIDTH=203><CODE>kMuiWidgetType_Group_HEnd</CODE></TD><TD WIDTH=301>Entry following a group of widgets arranged horizontally</TD></TR><TR><TD WIDTH=203><CODE>kMuiWidgetType_Group_VBegin</CODE></TD><TD WIDTH=301>Entry preceding a group of widgets arranged vertically</TD></TR><TR><TD WIDTH=203><CODE>kMuiWidgetType_Group_VEnd</CODE></TD><TD WIDTH=301>Entry following a group of widgets arranged vertically</TD></TR></TABLE><P><BR><H4><A NAME="TMuiWindow"><FONT FACE="Arial">TMuiWindow</FONT></A></H4><P>Defined in: muiinit.t<BR><PRE><FONT SIZE=2>typedef struct{        MoaLong                 iStructSize        TMuiWindowType          iType;          ConstPMoaChar           pTitle;        TMuiLayoutType          iLayout;        TMuiWindowPosition      iPosition;        MoaLong                 iXPosition;        MoaLong                 iYPosition;        MoaLong                 iWidth;         MoaLong                 iHeight;        MoaBool                 bModal;         MoaBool                 bToolTipsOn;        MoaBool                 bHasCloseBox;        MoaBool                 bCanZoom;} TMuiWindow, FAR * PTMuiWindow;</FONT></PRE><P>Structure passed to <A HREF="mudialog.htm#Initialize">IMuiDialog::Initialize()</A>to indicate parameters of the window to be created. Fields inthe structure are used as follows: <P><TABLE BORDER=2><TR><TD WIDTH=86><B>Field</B></TD><TD WIDTH=125><B>Type</B></TD><TD WIDTH=293><B>Description</B></TD></TR><TR><TD WIDTH=86><CODE>iStructSize</CODE></TD><TD WIDTH=125><CODE>MoaLong</CODE></TD><TD WIDTH=293>use to determine version of struct, = sizeof(TMuiWindow) </TD></TR><TR><TD WIDTH=86><CODE>iType</CODE></TD><TD WIDTH=125><CODE>TMuiWindowType</CODE></TD><TD WIDTH=293>window type (one of <CODE>kMuiWindowType_None</CODE>, <CODE>kMuiWindowType_Palette</CODE>, <CODE>kMuiWindowType_Standard</CODE>, or <CODE>kMuiWindowType_NonMovable</CODE>)</TD></TR><TR><TD WIDTH=86><CODE>pTitle</CODE></TD><TD WIDTH=125><CODE>ConstPMoaChar</CODE></TD><TD WIDTH=293>name of window, set to NULL for none</TD></TR><TR><TD WIDTH=86><CODE>iLayout</CODE></TD><TD WIDTH=125><CODE>TMuiLayoutType</CODE></TD><TD WIDTH=293>how to layout the widgets (one of <CODE>kMuiLayout_Dynamic</CODE>, <CODE>kMuiLayout_DialogUnit</CODE>, <CODE>kMuiLayout_Pixel</CODE>, <CODE>kMuiLayout_Resource</CODE>, or <CODE>kMuiLayout_MAX</CODE>)</TD></TR><TR><TD WIDTH=86><CODE>iPosition</CODE></TD><TD WIDTH=125><CODE>TMuiWindowPosition</CODE></TD><TD WIDTH=293>if this set, the <CODE>iXPosition</CODE> and <CODE>iYPosition</CODE> fields may be ignored (one of <CODE>kMuiWindowPosition_Alert</CODE>, <CODE>kMuiWindowPosition_Centered</CODE>)</TD></TR><TR><TD WIDTH=86><CODE>iXPosition</CODE></TD><TD WIDTH=125><CODE>MoaLong</CODE></TD><TD WIDTH=293>position of upper left of window, from upper left of dialog, NULL = Center</TD></TR><TR><TD WIDTH=86><CODE>iYPosition</CODE></TD><TD WIDTH=125><CODE>MoaLong</CODE></TD><TD WIDTH=293>position of upper left of window, from upper left of dialog, NULL = Center</TD></TR><TR><TD WIDTH=86><CODE>iWidth</CODE></TD><TD WIDTH=125><CODE>MoaLong</CODE></TD><TD WIDTH=293>pixel width of window, NULL = automatic</TD></TR><TR><TD WIDTH=86><CODE>iHeight</CODE></TD><TD WIDTH=125><CODE>MoaLong</CODE></TD><TD WIDTH=293>pixel height of window, NULL = automatic</TD></TR><TR><TD WIDTH=86><CODE>bModal</CODE></TD><TD WIDTH=125><CODE>MoaBool</CODE></TD><TD WIDTH=293>TRUE if modal</TD></TR><TR><TD WIDTH=86><CODE>bToolTipsOn</CODE></TD><TD WIDTH=125><CODE>MoaBool</CODE></TD><TD WIDTH=293>TRUE if dialog should display tool tips initially </TD></TR><TR><TD WIDTH=86><CODE>bHasCloseBox</CODE></TD><TD WIDTH=125><CODE>MoaBool</CODE></TD><TD WIDTH=293>TRUE if dialog has close box</TD></TR><TR><TD WIDTH=86><CODE>bCanZoom</CODE></TD><TD WIDTH=125><CODE>MoaBool</CODE></TD><TD WIDTH=293>TRUE if window zooms</TD></TR></TABLE><P><BR><H4><FONT FACE="Arial">TMuiWindowType</FONT></H4><P>Defined in: muiinit.t<P><CODE>typedef MoaLong TMuiWindowType;</CODE><P>Field of the <A HREF="#TMuiWindow"><FONT SIZE=2>TMuiWindow</FONT></A>structure, specifies the type of a dialog window.<P><TABLE BORDER=2><TR><TD WIDTH=252>kMuiWindowType_Standard</TD><TD WIDTH=252></TD></TR><TR><TD WIDTH=252>kMuiWindowType_NonMovable</TD><TD WIDTH=252></TD></TR></TABLE><P><BR><H4><A NAME="TMuiWindowPosition"><FONT FACE="Arial">TMuiWindowPosition</FONT></A></H4><P>Defined in: muiinit.t<P><CODE>typedef MoaLong TMuiWindowPosition</CODE><P>Field of the <A HREF="#TMuiWindow"><FONT SIZE=2>TMuiWindow</FONT></A>structure, specifies the position of a dialog window. The followingvalues are defined for the window position:<P><TABLE BORDER=2><TR><TD WIDTH=252><CODE>kMuiWindowPosition_Alert</CODE></TD><TD WIDTH=252></TD></TR><TR><TD WIDTH=252><CODE>kMuiWindowPosition_Centered</CODE></TD><TD WIDTH=252></TD></TR></TABLE><P><HR width=45% align=left><H3><FONT SIZE=4 face=arial,helvetica,sans-serif><A NAME="MUCONSTS">MUI Constants</A></FONT></H3><H4><FONT FACE="Arial">IMuiDialog::WindowOp() constants</FONT></H4><P>The following constants are defined as parameters to the <A HREF="mudialog.htm#WindowOp" >IMuiDialog::WindowOp()</A>method:<BR><P><TABLE BORDER=2><TR><TD WIDTH=252><DL><DT><CODE>kMui_WindowOp_Hide</CODE></DL></TD><TD WIDTH=252><DL><DT>Hide the dialog</DL></TD></TR><TR><TD WIDTH=252><DL><DT><CODE>kMui_WindowOp_Show</CODE> </DL></TD><TD WIDTH=252><DL><DT>Show the dialog </DL></TD></TR><TR><TD WIDTH=252><DL><DT><CODE>kMui_WindowOp_Center</CODE></DL></TD><TD WIDTH=252><DL><DT>Center the dialog </DL></TD></TR></TABLE><P><HR width=45% align=left><H3><FONT SIZE=4 face=arial,helvetica,sans-serif><A NAME="MUERRS">MUI Errors</A></FONT></H3><H4><FONT FACE="Arial">IMuiDialog errors</FONT></H4><P><CODE>kMuiErr_DialogCanceledWithCloseBox</CODE><P><CODE>kMuiErr_DialogCanceledWithESC</CODE><P>These errors are returned from the <A HREF="mudialog.htm#Run"><FONT SIZE=2>IMuiDialog::Run()</FONT></A>method when the user cancels a modal dialog. <BR><HR width=45% align=left><P><A HREF="../copyrite.htm">Copyright &#169; 1995, 1996, 1997, 1998, 1999 Macromedia, Inc.</A><!--#include virtual="/uber/html/footer.html" --></BODY></HTML>